{"version":3,"sources":["../../../src/core/gitApi.js","../../../src/core/chaptersAndVerses.js","../../../src/core/helpers.js","../../src/index.js","../../../../../src/components/book_package/book_package_tw/index.js","../../../../../src/components/book_package/book_package_tq/index.js","../../../../../src/components/book_package/book_package_tn/index.js","../../../../../src/components/book_package/book_package_ta/index.js","../../../../../src/components/book_package/book_package_ult/index.js","../../../../../src/components/book_package/book_package_ust/index.js","../../../../src/components/book_package_totals/index.js","../../../src/components/index.js","../../../../src/components/book_package/index.js","../../../../../src/components/book_package/book_package_strongs/index.js","../../../../../src/components/book_package/book_package_strongs/BookPackageStrongs.js","../../../../../src/components/book_package/book_package_strongs/helpers.js","../../../../../src/components/book_package/book_package_tw/BookPackageTw.js","../../../../../src/components/book_package/book_package_tw/helpers.js","../../../../../src/components/book_package/book_package_tq/BookPackageTq.js","../../../../../src/components/book_package/book_package_tq/helpers.js","../../../../../src/components/book_package/book_package_tn/BookPackageTn.js","../../../../../src/components/book_package/book_package_tn/helpers.js","../../../../../src/components/book_package/book_package_ta/BookPackageTa.js","../../../../../src/components/book_package/book_package_ta/helpers.js","../../../../../src/components/book_package/book_package_ult/BookPackageUlt.js","../../../../../src/components/book_package/book_package_ult/helpers.js","../../../../../src/components/book_package/book_package_ust/BookPackageUst.js","../../../../../src/components/book_package/book_package_ust/helpers.js","../../../../src/components/book_package_rollup/index.js","../../../../src/components/book_package_rollup/BookPackageRollup.js","../../../../src/components/book_package_totals/BookPackageTotals.js","../../../../src/components/single_package_total/index.js","../../../../src/components/single_package_total/SinglePackageTotal.js","../../../src/core/timeout-watcher.js","../../../../../src/components/book_package/book_package_obs/index.js","../../../../../src/components/book_package/book_package_obs/BookPackageObs.js","../../../../../src/components/book_package/book_package_obs/helpers.js","../../../src/core/index.js","core/books.ts","core/csvMaker.ts","core/optimize.tsx","core/exportBookPackage.ts","core/export.ts","App.tsx","serviceWorker.ts","index.tsx","../../../src/core/setupBpDatabase.js"],"names":["baseURL","cacheStore","driver","localforage","name","zipStore","api","setup","cache","store","maxAge","exclude","query","key","req","serialized","JSON","resourceRepositories","languageId","obs","ult","ust","irv","ulb","udb","tn","ta","tw","tq","ugnt","uhb","ugl","uhal","username","manifests","_resourceRepositories","resourceIds","Object","promises","resourceId","repository","fetchManifest","Promise","manifestArray","getFile","path","yaml","json","YAML","fetchFileFromServer","branch","repositoryExists","uri","Path","get","data","getFileFromZip","file","getUID","user","uid","params","repo","repos","arepo","repositories","fetchRepositoryZipFile","zipArray","zipUri","fetch","response","zipArrayBuffer","zipBlob","JSZip","zip","zipPath","fetchTree","sha","tree","recursiveTree","pathArray","results","result","item","childPath","children","id","i","chaptersInBook","bookId","Array","bookData","chapters","chapter","row","validateBookId","reference","valid","validateChapter","dependencies","chapterCount","inRange","validateVerse","verseCount","resources","original","uhbManifest","ugntManifest","testament","whichTestament","originalManifest","manifest","fetchBook","translationNotes","fetchOriginalBook","resourcesArray","projects","projectByBookId","gitApi","fetchFileByBookId","usfm","usfmjs","fetchNotes","fetchQuestions","tsv","tsvParse","console","project","translationNotesObject","array","book","verse","support_reference","original_quote","occurrence","gl_quote","occurrence_note","object","_projects","BookPackageStrongs","clearFlag","classes","style","useState","_book","setVal","useEffect","validateInputProperties","chlist","fetchBookPackageStrongs","gkeys","rootTitle","className","paper","defaultCollapseIcon","defaultExpandIcon","nodeId","label","variant","gutterBottom","size","aria-label","align","skey","component","scope","href","convertToLink","target","rel","fetchData","root","PropTypes","withStyles","theme","lnk","s","cav","uhal_path","ugl_path","ref","chaparray","vip","process_tags","count","summary_strong_map","repo_path","val","err","errors","counts","wc","thisword","summary_article_map","detail_article_map","dbkey","bpstore","x","_manifests","map_to_obj","mp","ob","book_map","obj_to_map","k","v","verses_map","v1","verse_map","v2","verse_obj_map","k3","v3","j","children_map","k4","v4","totalWordCount","v5","totalStrongWordCount","v6","BookPackageTw","fetchObsTw","fetchBookPackageTw","convertRC2Link","_content","Error","_rcContainerLinks","_tsv","summary_tw_map","summary_twArticle_map","summary_ByArticle_map","process_rcLink","wordAggregation","w","wcounts","link","twcounts","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","BookPackageTq","_tq","fetchObsTq","fetchBookPackageTq","mt","icons","title","columns","options","sumtotals","_questions","translationQuestions","allQuestions","total","ch","question","vcounts","allNotes","_notes","annotation","BookPackageTn","fetchObsTn","fetchBookPackageTn","occurrenceNote","BookPackageTa","fetchBookPackageTa","tkeys","uniqueAndSorted","Set","tacount","tarticles","summary_tarticles_map","detail_tarticles_map","tarticle","taLink","slash","base","mdfiles","grandAllText","uniqSorted","alltext","tacounts","BookPackageUlt","fetchBookPackageULT","level","BookPackageUst","fetchBookPackageUST","BookPackageRollup","bookarray","bi","defaultExpanded","bp_totals","resourcePrefixes","obsResourePrefixes","ult_total","ust_total","utn_total","utq_total","utw_total","uta_total","obs_total","setTimeout","tbid","all_map","resource_map","allPresent","ri","lsk","uta_dedup","omap","y","m","n","z","utw_dedup","totalPackcageWordCount","c","wf","theLoop","BookPackageTotals","delay","iterations","_totals","_delay","_iterations","SinglePackageTotal","interval","_total","_interval","onIteration","onTimeout","timeoutWatcher","f","g","BookPackageObs","fetchBookPackageObs","bool","allContent","fiftyChapters","newTestament","list","length","push","oldTestament","titlesToBoolean","bookDataTitles","forEach","bookIdByTitle","bookTitleById","addRow","csvdata","csvrow","cell","undefined","startsWith","endsWith","substring","includes","replace","toCSV","join","convertUtaToLink","convertUtwToLink","optimize","state","setOpt","a","CircularProgress","allbooks","keys","bookpkg","filter","log","booksDone","booksOpt","articleCount","Map","bookCountTotalsPreOpt","bookCountArticleTotalsPreOpt","bklist","bk","bkid","books","res","dbsetup","getItem","rescount","grandTotalWordCount","has","set","allArticles","articlename","articleWordCount","csv","doneGrandTotal","utaGrandTotal","utwGrandTotal","doneArticleMap","dam","articles","toLocaleString","values","resourceTotal","round","optBooks","optCounts","optUtaMap","optUtwMap","refmapUta","refmapUtw","newBooks","newCounts","optArticleMap","optBookTotal","roundWinnerBook","roundWinnerCount","winnerUtaTotal","winnerUtwTotal","summary_ref_map","optUta","optUtw","setItem","Typography","map","t","TreeView","TreeItem","uta","Link","utw","exportBookPackage","bookCountTotals","bookCountArticleTotals","entries","csvdetails","utqTotal","utnTotal","obsTotal","ultTotal","ustTotal","utaTotal","utwTotal","utaTracker","utwTracker","sufkey","dedupList","csvDownload","exportCounts","utn","utq","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","useStyles","makeStyles","createStyles","width","flexGrow","menuButton","marginRight","spacing","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","formControl","margin","button","instructions","marginTop","marginBottom","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","alignItemsAndJustifyContent","offset","GreenCheckbox","color","green","checked","props","Checkbox","joinBookIds","queryProcessedOnce","App","React","setState","activeStep","setActiveStep","skipped","setSkipped","steps","isStepSkipped","step","handleNext","newSkipped","delete","prevActiveStep","search","window","location","URLSearchParams","useQuery","bks","barrayIds","split","barrayTitles","alert","b","clear","useTheme","anchorEl","setAnchorEl","popen","Boolean","open","setOpen","ts","Date","toISOString","copyToClipboard","str","el","value","position","left","select","execCommand","event","states","ids","origin","pathname","url","defBase","currentTarget","exp","clearF","setClearF","handleChange","handleFinishedChange","_opt","opt","message","CssBaseline","AppBar","clsx","Toolbar","IconButton","onClick","edge","Drawer","anchor","direction","Divider","FormGroup","FormControlLabel","control","Switch","onChange","handleChangeClearFlag","Button","disabled","aria-describedby","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Paper","Stepper","index","stepProps","labelProps","completed","Step","StepLabel","Container","getStepContent","Grid","container","xs","FormControl","required","FormLabel","FormHelperText","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","e"],"mappings":"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","file":"static/js/main.626fe8b9.chunk.js","sourcesContent":["import Path from 'path';\r\nimport YAML from 'js-yaml-parser';\r\nimport localforage from 'localforage';\r\nimport { setup } from 'axios-cache-adapter';\r\nimport JSZip from 'jszip';\r\n\r\n//const baseURL = 'https://develop.door43.org/';\r\nconst baseURL = 'https://git.door43.org/';\r\n//const baseURL = 'https://qa.door43.org/';\r\nconst apiPath = 'api/v1';\r\n\r\nconst cacheStore = localforage.createInstance({\r\n  driver: [localforage.INDEXEDDB],\r\n  name: 'web-cache',\r\n});\r\n\r\nconst zipStore = localforage.createInstance({\r\n  driver: [localforage.INDEXEDDB],\r\n  name: 'zip-store',\r\n});\r\n\r\nconst api = setup({\r\n  baseURL: baseURL,\r\n  cache: {\r\n    store: cacheStore,\r\n    maxAge: 1 * 24 * 60 * 60 * 1000,\r\n    exclude: { query: false },\r\n    key: req => {\r\n      // if (req.params) debugger\r\n      let serialized = req.params instanceof URLSearchParams ?\r\n      req.params.toString() : JSON.stringify(req.params) || '';\r\n      return req.url + serialized;\r\n    },\r\n  },\r\n});\r\n\r\nexport const resourceRepositories = ({languageId}) => {\r\n  return {\r\n    obs: languageId + '_obs',\r\n    'obs-tn': languageId + '_obs-tn',\r\n    'obs-tq': languageId + '_obs-tq',\r\n    'obs-sn': languageId + '_obs-sn',\r\n    'obs-sq': languageId + '_obs-sq',\r\n    ult: languageId + '_ult',\r\n    ust: languageId + '_ust',\r\n    irv: languageId + '_irv',\r\n    ulb: languageId + '_ulb',\r\n    udb: languageId + '_udb',\r\n    tn: languageId + '_tn',\r\n    ta: languageId + '_ta',\r\n    tw: languageId + '_tw',\r\n    tq: languageId + '_tq',\r\n    ugnt: 'el-x-koine_ugnt',\r\n    uhb: 'hbo_uhb',\r\n    ugl: languageId + '_ugl',\r\n    uhal: languageId + '_uhal',\r\n  };\r\n};\r\n\r\nexport async function fetchResourceManifests({username, languageId}) {\r\n  let manifests = {};\r\n  const _resourceRepositories = resourceRepositories({languageId});\r\n  const resourceIds = Object.keys(_resourceRepositories);\r\n  const promises = resourceIds.map(resourceId => {\r\n    const repository = _resourceRepositories[resourceId];\r\n    const _username = ['ugnt','uhb'].includes(resourceId) ? 'unfoldingword' : username;\r\n    return fetchManifest({username: _username, repository})\r\n  });\r\n  const manifestArray = await Promise.all(promises);\r\n  resourceIds.forEach((resourceId, index) => {\r\n    manifests[resourceId] = manifestArray[index];\r\n  });\r\n  return manifests;\r\n};\r\n\r\nexport async function fetchManifest({username, repository}) {\r\n  const yaml = await getFile({username, repository, path: 'manifest.yaml'});\r\n  const json = (yaml) ? YAML.safeLoad(yaml) : null;\r\n  return json;\r\n};\r\n\r\n// https://git.door43.org/unfoldingword/en_ult/raw/branch/master/manifest.yaml\r\nexport async function fetchFileFromServer({username, repository, path, branch='master'}) {\r\n  const repoExists = await repositoryExists({username, repository});\r\n  if (repoExists) {\r\n    const uri = Path.join(username, repository, 'raw/branch', branch, path);\r\n    try {\r\n      const data = await get({uri});\r\n      return data;\r\n    }\r\n    catch(error) {\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport async function getFile({username, repository, path, branch}) {\r\n  let file;\r\n  file = await getFileFromZip({username, repository, path, branch});\r\n  if (!file) {\r\n    file = await fetchFileFromServer({username, repository, path, branch});\r\n  }\r\n  return file;\r\n}\r\n\r\nexport async function getUID({username}) {\r\n  const uri = Path.join(apiPath, 'users', username);\r\n  const user = await get({uri});\r\n  const {id: uid} = user;\r\n  return uid;\r\n}\r\nexport async function repositoryExists({username, repository}) {\r\n  const uid = await getUID({username});\r\n  const params = { repo: repository, uid };\r\n  const uri = Path.join(apiPath, 'repos', `search`);\r\n  const {data: repos} = await get({uri, params});\r\n  const arepo = repos.filter(repo => repo.name === repository)[0];\r\n  return !!arepo;\r\n};\r\n\r\nexport async function get({uri, params}) {\r\n  const {data} = await api.get(uri, { params });\r\n  return data;\r\n};\r\n\r\nexport async function getURL({uri, params}) {\r\n  const {data} = await api.get(uri, { params });\r\n  return data;\r\n};\r\n\r\nexport async function fetchRepositoriesZipFiles({username, languageId, branch}) {\r\n  const repositories = resourceRepositories({languageId});\r\n  const promises = Object.values(repositories).map(repository => {\r\n    return fetchRepositoryZipFile({username, repository, branch});\r\n  });\r\n  const zipArray = await Promise.all(promises);\r\n  return zipArray;\r\n};\r\n\r\n// https://git.door43.org/unfoldingWord/en_ult/archive/master.zip\r\nasync function fetchRepositoryZipFile({username, repository, branch}) {\r\n  const repoExists = await repositoryExists({username, repository});\r\n  if (!repoExists) {\r\n    return null;\r\n  }\r\n  const uri = zipUri({username, repository, branch});\r\n  const response = await fetch(uri);\r\n  if (response.status === 200 || response.status === 0) {\r\n    const zipArrayBuffer = await response.arrayBuffer(); // blob storage not supported on mobile\r\n    await zipStore.setItem(uri, zipArrayBuffer);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nasync function getFileFromZip({username, repository, path, branch}) {\r\n  let file;\r\n  const uri = zipUri({username, repository, branch});\r\n  const zipBlob = await zipStore.getItem(uri);\r\n  try {\r\n    if (zipBlob) {\r\n      const zip = await JSZip.loadAsync(zipBlob);\r\n      const zipPath = Path.join(repository.toLowerCase(), path);\r\n      file = await zip.file(zipPath).async(\"string\");\r\n    }\r\n  } catch(error) {\r\n    file = null;\r\n  }\r\n  return file;\r\n};\r\n\r\nfunction zipUri({username, repository, branch='master'}) {\r\n  const zipPath = Path.join(username, repository, 'archive', `${branch}.zip`);\r\n  const zipUri = baseURL + zipPath;\r\n  return zipUri;\r\n};\r\n\r\n// http://bg.door43.org/api/v1/repos/unfoldingword/en_ugl/git/trees/master\r\nexport async function fetchTree({username, repository, sha='master'}) {\r\n  try {\r\n    const uri = Path.join('api/v1/repos', username, repository, 'git/trees', sha);\r\n    const data = await get({uri});\r\n    const tree = JSON.parse(data);\r\n    return tree;\r\n  } catch(error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport async function recursiveTree({username, repository, path, sha}) {\r\n  let tree = {};\r\n  const pathArray = path.split();\r\n  const results = fetchTree({username, repository, sha});\r\n  const result = results.tree.filter(item => item.path === pathArray[0])[0];\r\n  if (result) {\r\n    if (result.type === 'tree') {\r\n      const childPath = pathArray.slice(1).join('/');\r\n      const children = recursiveTree({username, repository, path: childPath, sha: result.sha});\r\n      tree[result.path] = children;\r\n    } else if (result.type === 'blob') {\r\n      tree[result.path] = true;\r\n    }\r\n  }\r\n};\r\n\r\nexport async function fileExists({username, repository, path, branch}) {\r\n  // get root listing\r\n  recursiveTree()\r\n  // get recursive path listing\r\n}\r\n","const data = [\r\n  {\"id\": \"gen\", \"title\": \"Genesis\", \"usfm\": \"01-GEN\", \"testament\": \"old\", \"verseCount\": 1533, \"chapters\": [31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38, 18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 55, 32, 20, 31, 29, 43, 36, 30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26]},\r\n  {\"id\": \"exo\", \"title\": \"Exodus\", \"usfm\": \"02-EXO\", \"testament\": \"old\", \"verseCount\": 1213, \"chapters\": [22, 25, 22, 31, 23, 30, 25, 32, 35, 29, 10, 51, 22, 31, 27, 36, 16, 27, 25, 26, 36, 31, 33, 18, 40, 37, 21, 43, 46, 38, 18, 35, 23, 35, 35, 38, 29, 31, 43, 38]},\r\n  {\"id\": \"lev\", \"title\": \"Leviticus\", \"usfm\": \"03-LEV\", \"testament\": \"old\", \"verseCount\": 859, \"chapters\": [17, 16, 17, 35, 19, 30, 38, 36, 24, 20, 47, 8, 59, 57, 33, 34, 16, 30, 37, 27, 24, 33, 44, 23, 55, 46, 34]},\r\n  {\"id\": \"num\", \"title\": \"Numbers\", \"usfm\": \"04-NUM\", \"testament\": \"old\", \"verseCount\": 1288, \"chapters\": [54, 34, 51, 49, 31, 27, 89, 26, 23, 36, 35, 16, 33, 45, 41, 50, 13, 32, 22, 29, 35, 41, 30, 25, 18, 65, 23, 31, 40, 16, 54, 42, 56, 29, 34, 13]},\r\n  {\"id\": \"deu\", \"title\": \"Deuteronomy\", \"usfm\": \"05-DEU\", \"testament\": \"old\", \"verseCount\": 959, \"chapters\": [46, 37, 29, 49, 33, 25, 26, 20, 29, 22, 32, 32, 18, 29, 23, 22, 20, 22, 21, 20, 23, 30, 25, 22, 19, 19, 26, 68, 29, 20, 30, 52, 29, 12]},\r\n  {\"id\": \"jos\", \"title\": \"Joshua\", \"usfm\": \"06-JOS\", \"testament\": \"old\", \"verseCount\": 658, \"chapters\": [18, 24, 17, 24, 15, 27, 26, 35, 27, 43, 23, 24, 33, 15, 63, 10, 18, 28, 51, 9, 45, 34, 16, 33]},\r\n  {\"id\": \"jdg\", \"title\": \"Judges\", \"usfm\": \"07-JDJ\", \"testament\": \"old\", \"verseCount\": 618, \"chapters\": [36, 23, 31, 24, 31, 40, 25, 35, 57, 18, 40, 15, 25, 20, 20, 31, 13, 31, 30, 48, 25]},\r\n  {\"id\": \"rut\", \"title\": \"Ruth\", \"usfm\": \"08-RUT\", \"testament\": \"old\", \"verseCount\": 85, \"chapters\": [22, 23, 18, 22]},\r\n  {\"id\": \"1sa\", \"title\": \"1 Samuel\", \"usfm\": \"09-1SA\", \"testament\": \"old\", \"verseCount\": 810, \"chapters\": [28, 36, 21, 22, 12, 21, 17, 22, 27, 27, 15, 25, 23, 52, 35, 23, 58, 30, 24, 42, 15, 23, 29, 22, 44, 25, 12, 25, 11, 31, 13]},\r\n  {\"id\": \"2sa\", \"title\": \"2 Samuel\", \"usfm\": \"10-2SA\", \"testament\": \"old\", \"verseCount\": 695, \"chapters\": [27, 32, 39, 12, 25, 23, 29, 18, 13, 19, 27, 31, 39, 33, 37, 23, 29, 33, 43, 26, 22, 51, 39, 25]},\r\n  {\"id\": \"1ki\", \"title\": \"1 Kings\", \"usfm\": \"11-1KI\", \"testament\": \"old\", \"verseCount\": 816, \"chapters\": [53, 46, 28, 34, 18, 38, 51, 66, 28, 29, 43, 33, 34, 31, 34, 34, 24, 46, 21, 43, 29, 53]},\r\n  {\"id\": \"2ki\", \"title\": \"2 Kings\", \"usfm\": \"12-2KI\", \"testament\": \"old\", \"verseCount\": 719, \"chapters\": [18, 25, 27, 44, 27, 33, 20, 29, 37, 36, 21, 21, 25, 29, 38, 20, 41, 37, 37, 21, 26, 20, 37, 20, 30]},\r\n  {\"id\": \"1ch\", \"title\": \"1 Chronicles\", \"usfm\": \"13-1CH\", \"testament\": \"old\", \"verseCount\": 942, \"chapters\": [54, 55, 24, 43, 26, 81, 40, 40, 44, 14, 47, 40, 14, 17, 29, 43, 27, 17, 19, 8, 30, 19, 32, 31, 31, 32, 34, 21, 30]},\r\n  {\"id\": \"2ch\", \"title\": \"2 Chronicles\", \"usfm\": \"14-2CH\", \"testament\": \"old\", \"verseCount\": 822, \"chapters\": [17, 18, 17, 22, 14, 42, 22, 18, 31, 19, 23, 16, 22, 15, 19, 14, 19, 34, 11, 37, 20, 12, 21, 27, 28, 23, 9, 27, 36, 27, 21, 33, 25, 33, 27, 23]},\r\n  {\"id\": \"ezr\", \"title\": \"Ezra\", \"usfm\": \"15-EZR\", \"testament\": \"old\", \"verseCount\": 280, \"chapters\": [11, 70, 13, 24, 17, 22, 28, 36, 15, 44]},\r\n  {\"id\": \"neh\", \"title\": \"Nehemiah\", \"usfm\": \"16-NEH\", \"testament\": \"old\", \"verseCount\": 406, \"chapters\": [11, 20, 32, 23, 19, 19, 73, 18, 38, 39, 36, 47, 31]},\r\n  {\"id\": \"est\", \"title\": \"Ester\", \"usfm\": \"17-EST\", \"testament\": \"old\", \"verseCount\": 167, \"chapters\": [22, 23, 15, 17, 14, 14, 10, 17, 32, 3]},\r\n  {\"id\": \"job\", \"title\": \"Job\", \"usfm\": \"18-JOB\", \"testament\": \"old\", \"verseCount\": 1070, \"chapters\": [22, 13, 26, 21, 27, 30, 21, 22, 35, 22, 20, 25, 28, 22, 35, 22, 16, 21, 29, 29, 34, 30, 17, 25, 6, 14, 23, 28, 25, 31, 40, 22, 33, 37, 16, 33, 24, 41, 30, 24, 34, 17]},\r\n  {\"id\": \"psa\", \"title\": \"Psalms\", \"usfm\": \"19-PSA\", \"testament\": \"old\", \"verseCount\": 2461, \"chapters\": [6, 12, 8, 8, 12, 10, 17, 9, 20, 18, 7, 8, 6, 7, 5, 11, 15, 50, 14, 9, 13, 31, 6, 10, 22, 12, 14, 9, 11, 12, 24, 11, 22, 22, 28, 12, 40, 22, 13, 17, 13, 11, 5, 26, 17, 11, 9, 14, 20, 23, 19, 9, 6, 7, 23, 13, 11, 11, 17, 12, 8, 12, 11, 10, 13, 20, 7, 35, 36, 5, 24, 20, 28, 23, 10, 12, 20, 72, 13, 19, 16, 8, 18, 12, 13, 17, 7, 18, 52, 17, 16, 15, 5, 23, 11, 13, 12, 9, 9, 5, 8, 28, 22, 35, 45, 48, 43, 13, 31, 7, 10, 10, 9, 8, 18, 19, 2, 29, 176, 7, 8, 9, 4, 8, 5, 6, 5, 6, 8, 8, 3, 18, 3, 3, 21, 26, 9, 8, 24, 13, 10, 7, 12, 15, 21, 10, 20, 14, 9, 6]},\r\n  {\"id\": \"pro\", \"title\": \"Proverbs\", \"usfm\": \"20-PRO\", \"testament\": \"old\", \"verseCount\": 915, \"chapters\": [33, 22, 35, 27, 23, 35, 27, 36, 18, 32, 31, 28, 25, 35, 33, 33, 28, 24, 29, 30, 31, 29, 35, 34, 28, 28, 27, 28, 27, 33, 31]},\r\n  {\"id\": \"ecc\", \"title\": \"Ecclesiastes\", \"usfm\": \"21-ECC\", \"testament\": \"old\", \"verseCount\": 222, \"chapters\": [18, 26, 22, 16, 20, 12, 29, 17, 18, 20, 10, 14]},\r\n  {\"id\": \"sng\", \"title\": \"Song of Songs\", \"usfm\": \"22-SNG\", \"testament\": \"old\", \"verseCount\": 117, \"chapters\": [17, 17, 11, 16, 16, 13, 13, 14]},\r\n  {\"id\": \"isa\", \"title\": \"Isaiah\", \"usfm\": \"23-ISA\", \"testament\": \"old\", \"verseCount\": 1292, \"chapters\": [31, 22, 26, 6, 30, 13, 25, 22, 21, 34, 16, 6, 22, 32, 9, 14, 14, 7, 25, 6, 17, 25, 18, 23, 12, 21, 13, 29, 24, 33, 9, 20, 24, 17, 10, 22, 38, 22, 8, 31, 29, 25, 28, 28, 25, 13, 15, 22, 26, 11, 23, 15, 12, 17, 13, 12, 21, 14, 21, 22, 11, 12, 19, 12, 25, 24]},\r\n  {\"id\": \"jer\", \"title\": \"Jermiah\", \"usfm\": \"24-JER\", \"testament\": \"old\", \"verseCount\": 1364, \"chapters\": [19, 37, 25, 31, 31, 30, 34, 22, 26, 25, 23, 17, 27, 22, 21, 21, 27, 23, 15, 18, 14, 30, 40, 10, 38, 24, 22, 17, 32, 24, 40, 44, 26, 22, 19, 32, 21, 28, 18, 16, 18, 22, 13, 30, 5, 28, 7, 47, 39, 46, 64, 34]},\r\n  {\"id\": \"lam\", \"title\": \"Lamentations\", \"usfm\": \"25-LAM\", \"testament\": \"old\", \"verseCount\": 154, \"chapters\": [22, 22, 66, 22, 22]},\r\n  {\"id\": \"ezk\", \"title\": \"Ezekiel\", \"usfm\": \"26-EZK\", \"testament\": \"old\", \"verseCount\": 1273, \"chapters\": [28, 10, 27, 17, 17, 14, 27, 18, 11, 22, 25, 28, 23, 23, 8, 63, 24, 32, 14, 49, 32, 31, 49, 27, 17, 21, 36, 26, 21, 26, 18, 32, 33, 31, 15, 38, 28, 23, 29, 49, 26, 20, 27, 31, 25, 24, 23, 35]},\r\n  {\"id\": \"dan\", \"title\": \"Daniel\", \"usfm\": \"27-DAN\", \"testament\": \"old\", \"verseCount\": 357, \"chapters\": [21, 49, 30, 37, 31, 28, 28, 27, 27, 21, 45, 13]},\r\n  {\"id\": \"hos\", \"title\": \"Hosea\", \"usfm\": \"28-HOS\", \"testament\": \"old\", \"verseCount\": 197, \"chapters\": [11, 23, 5, 19, 15, 11, 16, 14, 17, 15, 12, 14, 16, 9]},\r\n  {\"id\": \"jol\", \"title\": \"Joel\", \"usfm\": \"29-JOL\", \"testament\": \"old\", \"verseCount\": 73, \"chapters\": [20, 32, 21]},\r\n  {\"id\": \"amo\", \"title\": \"Amos\", \"usfm\": \"30-AMO\", \"testament\": \"old\", \"verseCount\": 146, \"chapters\": [15, 16, 15, 13, 27, 14, 17, 14, 15]},\r\n  {\"id\": \"oba\", \"title\": \"Obadiah\", \"usfm\": \"31-OBA\", \"testament\": \"old\", \"verseCount\": 21, \"chapters\": [21]},\r\n  {\"id\": \"jon\", \"title\": \"Jonah\", \"usfm\": \"32-JON\", \"testament\": \"old\", \"verseCount\": 48, \"chapters\": [17, 10, 10, 11]},\r\n  {\"id\": \"mic\", \"title\": \"Micah\", \"usfm\": \"33-MIC\", \"testament\": \"old\", \"verseCount\": 105, \"chapters\": [16, 13, 12, 13, 15, 16, 20]},\r\n  {\"id\": \"nam\", \"title\": \"Nahum\", \"usfm\": \"34-NAM\", \"testament\": \"old\", \"verseCount\": 47, \"chapters\": [15, 13, 19]},\r\n  {\"id\": \"hab\", \"title\": \"Habakkuk\", \"usfm\": \"35-HAB\", \"testament\": \"old\", \"verseCount\": 56, \"chapters\": [17, 20, 19]},\r\n  {\"id\": \"zep\", \"title\": \"Zephaniah\", \"usfm\": \"36-ZEP\", \"testament\": \"old\", \"verseCount\": 53, \"chapters\": [18, 15, 20]},\r\n  {\"id\": \"hag\", \"title\": \"Haggai\", \"usfm\": \"37-HAG\", \"testament\": \"old\", \"verseCount\": 38, \"chapters\": [15, 23]},\r\n  {\"id\": \"zec\", \"title\": \"Zechariah\", \"usfm\": \"38-ZEC\", \"testament\": \"old\", \"verseCount\": 211, \"chapters\": [21, 13, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21]},\r\n  {\"id\": \"mal\", \"title\": \"Malachi\", \"usfm\": \"39-MAL\", \"testament\": \"old\", \"verseCount\": 55, \"chapters\": [14, 17, 18, 6]},\r\n  {\"id\": \"mat\", \"title\": \"Matthew\", \"usfm\": \"41-MAT\", \"testament\": \"new\", \"verseCount\": 1071, \"chapters\": [25, 23, 17, 25, 48, 34, 29, 34, 38, 42, 30, 50, 58, 36, 39, 28, 27, 35, 30, 34, 46, 46, 39, 51, 46, 75, 66, 20]},\r\n  {\"id\": \"mrk\", \"title\": \"Mark\", \"usfm\": \"42-MRK\", \"testament\": \"new\", \"verseCount\": 678, \"chapters\": [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20]},\r\n  {\"id\": \"luk\", \"title\": \"Luke\", \"usfm\": \"43-LUK\", \"testament\": \"new\", \"verseCount\": 1151, \"chapters\": [80, 52, 38, 44, 39, 49, 50, 56, 62, 42, 54, 59, 35, 35, 32, 31, 37, 43, 48, 47, 38, 71, 56, 53]},\r\n  {\"id\": \"jhn\", \"title\": \"John\", \"usfm\": \"44-JHN\", \"testament\": \"new\", \"verseCount\": 879, \"chapters\": [51, 25, 36, 54, 47, 71, 53, 59, 41, 42, 57, 50, 38, 31, 27, 33, 26, 40, 42, 31, 25]},\r\n  {\"id\": \"act\", \"title\": \"Acts\", \"usfm\": \"45-ACT\", \"testament\": \"new\", \"verseCount\": 1007, \"chapters\": [26, 47, 26, 37, 42, 15, 60, 40, 43, 48, 30, 25, 52, 28, 41, 40, 34, 28, 41, 38, 40, 30, 35, 27, 27, 32, 44, 31]},\r\n  {\"id\": \"rom\", \"title\": \"Romans\", \"usfm\": \"46-ROM\", \"testament\": \"new\", \"verseCount\": 433, \"chapters\": [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27]},\r\n  {\"id\": \"1co\", \"title\": \"1 Corinthians\", \"usfm\": \"47-1CO\", \"testament\": \"new\", \"verseCount\": 437, \"chapters\": [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24]},\r\n  {\"id\": \"2co\", \"title\": \"2 Corinthians\", \"usfm\": \"48-2CO\", \"testament\": \"new\", \"verseCount\": 257, \"chapters\": [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 14]},\r\n  {\"id\": \"gal\", \"title\": \"Galations\", \"usfm\": \"49-GAL\", \"testament\": \"new\", \"verseCount\": 149, \"chapters\": [24, 21, 29, 31, 26, 18]},\r\n  {\"id\": \"eph\", \"title\": \"Ephesians\", \"usfm\": \"50-EPH\", \"testament\": \"new\", \"verseCount\": 155, \"chapters\": [23, 22, 21, 32, 33, 24]},\r\n  {\"id\": \"php\", \"title\": \"Phillipians\", \"usfm\": \"51-PHP\", \"testament\": \"new\", \"verseCount\": 104, \"chapters\": [30, 30, 21, 23]},\r\n  {\"id\": \"col\", \"title\": \"Colossians\", \"usfm\": \"52-COL\", \"testament\": \"new\", \"verseCount\": 95, \"chapters\": [29, 23, 25, 18]},\r\n  {\"id\": \"1th\", \"title\": \"1 Thessalonians\", \"usfm\": \"53-1TH\", \"testament\": \"new\", \"verseCount\": 89, \"chapters\": [10, 20, 13, 18, 28]},\r\n  {\"id\": \"2th\", \"title\": \"2 Thessalonians\", \"usfm\": \"54-2TH\", \"testament\": \"new\", \"verseCount\": 47, \"chapters\": [12, 17, 18]},\r\n  {\"id\": \"1ti\", \"title\": \"1 Timothy\", \"usfm\": \"55-1TI\", \"testament\": \"new\", \"verseCount\": 113, \"chapters\": [20, 15, 16, 16, 25, 21]},\r\n  {\"id\": \"2ti\", \"title\": \"2 Timothy\", \"usfm\": \"56-2TI\", \"testament\": \"new\", \"verseCount\": 83, \"chapters\": [18, 26, 17, 22]},\r\n  {\"id\": \"tit\", \"title\": \"Titus\", \"usfm\": \"57-TIT\", \"testament\": \"new\", \"verseCount\": 46, \"chapters\": [16, 15, 15]},\r\n  {\"id\": \"phm\", \"title\": \"Philemon\", \"usfm\": \"58-PHM\", \"testament\": \"new\", \"verseCount\": 25, \"chapters\": [25]},\r\n  {\"id\": \"heb\", \"title\": \"Hebrews\", \"usfm\": \"59-HEB\", \"testament\": \"new\", \"verseCount\": 303, \"chapters\": [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25]},\r\n  {\"id\": \"jas\", \"title\": \"James\", \"usfm\": \"60-JAS\", \"testament\": \"new\", \"verseCount\": 108, \"chapters\": [27, 26, 18, 17, 20]},\r\n  {\"id\": \"1pe\", \"title\": \"1 Peter\", \"usfm\": \"61-1PE\", \"testament\": \"new\", \"verseCount\": 105, \"chapters\": [25, 25, 22, 19, 14]},\r\n  {\"id\": \"2pe\", \"title\": \"2 Peter\", \"usfm\": \"62-2PE\", \"testament\": \"new\", \"verseCount\": 61, \"chapters\": [21, 22, 18]},\r\n  {\"id\": \"1jn\", \"title\": \"1 John\", \"usfm\": \"63-1JN\", \"testament\": \"new\", \"verseCount\": 105, \"chapters\": [10, 29, 24, 21, 21]},\r\n  {\"id\": \"2jn\", \"title\": \"2 John\", \"usfm\": \"64-2JN\", \"testament\": \"new\", \"verseCount\": 13, \"chapters\": [13]},\r\n  {\"id\": \"3jn\", \"title\": \"3 John\", \"usfm\": \"65-3JN\", \"testament\": \"new\", \"verseCount\": 15, \"chapters\": [15]},\r\n  {\"id\": \"jud\", \"title\": \"Jude\", \"usfm\": \"66-JUD\", \"testament\": \"new\", \"verseCount\": 25, \"chapters\": [25]},\r\n  {\"id\": \"rev\", \"title\": \"Revelation\", \"usfm\": \"67-REV\", \"testament\": \"new\", \"verseCount\": 404, \"chapters\": [20, 29, 22, 11, 14, 17, 17, 13, 21, 11, 19, 17, 18, 20, 8, 21, 18, 24, 21, 15, 27, 21]}\r\n]\r\n\r\nexport const bookTitleById = (id) => {\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].id === id ) {\r\n      return data[i].title;\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\nexport const chaptersInBook = (bookId) => {\r\n  try {\r\n    let chapters;\r\n    if (bookId === 'obs') {\r\n      chapters = [...Array(50).keys()].map(i=>i+1);\r\n    } else {\r\n      chapters = bookData(bookId).chapters;\r\n    }\r\n    return chapters;\r\n  } catch(error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const versesInChapter = ({bookId, chapter}) => {\r\n  const verses = chaptersInBook({bookId})[chapter - 1];\r\n  return verses;\r\n};\r\n\r\nexport const bookData = (bookId) => {\r\n  const _bookData = data.filter(row => row.id === bookId)[0];\r\n  return _bookData;\r\n};\r\n\r\nexport const testament = (bookId) => {\r\n  const _testament = bookData(bookId).testament;\r\n  return _testament;\r\n};\r\n\r\nexport const validateBookId = (reference) => {\r\n  let valid;\r\n  if (reference.bookId === 'obs') {\r\n    valid = true;\r\n  } else if (reference.bookId && !!bookData(reference.bookId)) {\r\n    valid = true;\r\n  }\r\n  return valid;\r\n}\r\n\r\nexport const validateChapter = (reference) => {\r\n  const dependencies = ( validateBookId(reference) );\r\n  const chapters = chaptersInBook(reference.bookId);\r\n  const chapterCount = chapters.length;\r\n  const inRange = (chapterCount && reference.chapter <= chapterCount);\r\n\r\n  const valid = (dependencies && inRange);\r\n  return valid;\r\n}\r\n\r\nexport const validateVerse = (reference) => {\r\n  const dependencies = (validateBookId(reference) && validateChapter(reference));\r\n  const chapters = chaptersInBook(reference.bookId);\r\n  const verseCount = chapters[reference.chapter-1];\r\n  const inRange = (verseCount && reference.verse <= verseCount);\r\n  return (dependencies && inRange);\r\n};\r\n\r\nexport const validateReference = (reference) => {\r\n  const validBookId = validateBookId(reference);\r\n  if ( !validBookId ) return false;\r\n  const validChapter = validateChapter(reference);\r\n  if ( !validChapter ) return false;\r\n  const validVerse = (!!reference.verse) ? validateVerse(reference) : true;\r\n  if ( !validVerse ) return false\r\n  return true;\r\n};\r\n","import usfmjs from 'usfm-js';\r\n\r\n// Purpose: application wide\r\n// Scope: limited to resource files and parsing\r\n// Notes: pass in manifests don't fetch them\r\n\r\nimport * as gitApi from './gitApi';\r\n\r\nexport async function fetchResources({\r\n  context: {\r\n    username,\r\n    languageId,\r\n    reference: {\r\n      bookId,\r\n    },\r\n  },\r\n  manifests,\r\n}) {\r\n  let resources = {\r\n    ult: null,\r\n    ust: null,\r\n    ulb: null,\r\n    udb: null,\r\n    irv: null,\r\n    tn: null,\r\n    original: null,\r\n  };\r\n  const { uhb: uhbManifest, ugnt: ugntManifest} = manifests;\r\n  const testament = whichTestament({bookId, uhbManifest, ugntManifest})\r\n  const originalManifest = (testament === 'old') ? uhbManifest : ugntManifest;\r\n\r\n  const resourceIds = ['ult','ust','ulb','udb','irv','tn','original'];\r\n  const promises = resourceIds.map(async (resourceId) => {\r\n    let manifest;\r\n    if (['ult','ust','ulb','udb','irv'].includes(resourceId) && manifests[resourceId]) {\r\n      manifest = manifests[resourceId];\r\n      return fetchBook({username, languageId, resourceId, bookId, manifest});\r\n    }\r\n    if (resourceId === 'tn' && manifests[resourceId]) {\r\n      manifest = manifests[resourceId];\r\n      return translationNotes({username, languageId, bookId, manifest});\r\n    }\r\n    if (resourceId === 'original') {\r\n      return fetchOriginalBook({username, languageId, bookId, uhbManifest, ugntManifest});\r\n    }\r\n  });\r\n  const resourcesArray = await Promise.all(promises);\r\n  resourceIds.forEach((resourceId, index) => {\r\n    const data = resourcesArray[index];\r\n    const manifest = (resourceId === 'original') ? originalManifest : manifests[resourceId];\r\n    resources[resourceId] = {\r\n      manifest,\r\n      data\r\n    };\r\n  });\r\n  return resources;\r\n};\r\n\r\nexport async function fetchBook({username, languageId, resourceId, bookId, manifest}) {\r\n  const {projects} = manifest;\r\n  if (!projectByBookId({projects, bookId})) return null;\r\n  const repository = gitApi.resourceRepositories({languageId})[resourceId];\r\n  const usfm = await fetchFileByBookId({username, repository, bookId, manifest});\r\n  const json = usfmjs.toJSON(usfm);\r\n  return json.chapters;\r\n};\r\n\r\nexport const whichTestament = ({bookId, uhbManifest, ugntManifest}) => {\r\n  let testament;\r\n  const uhbProject = projectByBookId({projects: uhbManifest.projects, bookId});\r\n  const ugntProject = projectByBookId({projects: ugntManifest.projects, bookId});\r\n  if (uhbProject) testament = 'old';\r\n  if (ugntProject) testament = 'new';\r\n  return testament;\r\n}\r\n\r\nexport async function fetchOriginalBook({username, languageId, bookId, uhbManifest, ugntManifest}) {\r\n  let manifest, repository;\r\n  const testament = whichTestament({bookId, uhbManifest, ugntManifest});\r\n  const repositories = gitApi.resourceRepositories({languageId});\r\n  if (testament === 'old') {\r\n    manifest = uhbManifest;\r\n    repository = repositories.uhb;\r\n  };\r\n  if (testament === 'new') {\r\n    manifest = ugntManifest;\r\n    repository = repositories.ugnt;\r\n  };\r\n  const usfm = await fetchFileByBookId({username: 'unfoldingword', repository, bookId, manifest});\r\n  const json = usfmjs.toJSON(usfm);\r\n  return json.chapters;\r\n};\r\n\r\nexport async function fetchUGNTBook({username, languageId, bookId, manifest}) {\r\n  const repository = gitApi.resourceRepositories({languageId}).ugnt;\r\n  const usfm = await fetchFileByBookId({username, repository, bookId, manifest});\r\n  const json = usfmjs.toJSON(usfm);\r\n  return json;\r\n};\r\n\r\nexport async function fetchUHBBook({username, languageId, bookId, manifest}) {\r\n  const repository = gitApi.resourceRepositories({languageId}).uhb;\r\n  const usfm = await fetchFileByBookId({username, repository, bookId, manifest});\r\n  const json = usfmjs.toJSON(usfm);\r\n  return json;\r\n};\r\n\r\nexport const pivotTranslationNotes = ({tn}) => {\r\n  if (!tn) return {};\r\n  let translationNotesObject = {};\r\n  let array = JSON.parse(JSON.stringify(tn));\r\n  array.shift();\r\n  array.forEach(item => {\r\n    let [book, chapter, verse, id, support_reference, original_quote, occurrence, gl_quote, occurrence_note] = item;\r\n    if (book && chapter && verse) {\r\n      if (!translationNotesObject[chapter]) translationNotesObject[chapter] = {};\r\n      if (!translationNotesObject[chapter][verse]) translationNotesObject[chapter][verse] = [];\r\n      occurrence_note = (!!occurrence_note) ? occurrence_note.replace(/<br>/g,'\\n') : occurrence_note;\r\n      let object = {\r\n        id,\r\n        support_reference,\r\n        original_quote,\r\n        occurrence,\r\n        gl_quote,\r\n        occurrence_note,\r\n      };\r\n      translationNotesObject[chapter][verse].push(object);\r\n    }\r\n  });\r\n  return translationNotesObject\r\n}\r\n\r\nexport async function translationNotes({username, languageId, bookId, manifest}) {\r\n  const data = await fetchNotes({username, languageId, bookId, manifest});\r\n  return data;\r\n};\r\n\r\nexport async function translationQuestions({username, languageId, bookId, manifest}) {\r\n  const data = await fetchQuestions({username, languageId, bookId, manifest});\r\n  return data;\r\n};\r\n\r\nexport async function fetchNotes({ username, languageId, bookId, manifest }) {\r\n  let resourceId = bookId === 'obs' ? 'obs-tn' : 'tn'\r\n  const repository = gitApi.resourceRepositories({languageId})[resourceId];\r\n  const tsv = await fetchFileByBookId({username, repository, bookId, manifest});\r\n  const data = tsvParse({tsv});\r\n  console.log(\"fetchNotes() resourceId:\", resourceId)\r\n  return data;\r\n};\r\n\r\nexport async function fetchQuestions({username, languageId, bookId, manifest}) {\r\n  const repository = gitApi.resourceRepositories({languageId}).tq;\r\n  const tsv = await fetchFileByBookId({username, repository, bookId, manifest});\r\n  const data = tsvParse({tsv});\r\n  return data;\r\n};\r\n\r\n\r\nexport async function fetchFileByBookId({username, repository, bookId, manifest}) {\r\n\r\n  let data;\r\n  const {projects} = manifest;\r\n  const project = projectByBookId({projects, bookId});\r\n  let path;\r\n  if (project && project.path) {\r\n    path = project.path.replace(/^\\.\\//, '');\r\n    data = await gitApi.getFile({username, repository, path});\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const projectByBookId = ({projects, bookId}) => {\r\n  const _projects = projects.filter(item => item.identifier === bookId);\r\n  let project;\r\n  if (_projects.length > 0) {\r\n    project = _projects[0];\r\n  }\r\n  return project;\r\n};\r\n\r\nexport const tsvParse = ({tsv}) => {\r\n  try {\r\n    return tsv.trim().split('\\n').map(row => row.trim().split('\\t'));\r\n  } catch(error) {\r\n    return null;\r\n  }\r\n};\r\n","export * from './components';\r\nexport * from './core';","export {default} from './BookPackageTw';\r\n","export {default} from './BookPackageTq';\r\n","export {default} from './BookPackageTn';\r\n","export {default} from './BookPackageTa';\r\n","export {default} from './BookPackageUlt';\r\n","export {default} from './BookPackageUst';\r\n","export {default} from './BookPackageTotals';\r\n","export * from './book_package';\r\nexport {default as BookPackageRollup} from './book_package_rollup';\r\nexport {default as BookPackageTotals} from './book_package_totals';\r\n","export {default as BookPackageStrongs} from './book_package_strongs';\r\nexport {default as BookPackageTw} from './book_package_tw';\r\nexport {default as BookPackageTq} from './book_package_tq';\r\nexport {default as BookPackageTn} from './book_package_tn';\r\nexport {default as BookPackageTa} from './book_package_ta';\r\nexport {default as BookPackageUlt} from './book_package_ult';\r\nexport {default as BookPackageUst} from './book_package_ust';\r\n","export {default} from './BookPackageStrongs';\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageStrongs} from './helpers';\r\nimport {validateInputProperties, convertToLink} from './helpers';\r\n\r\n\r\nfunction BookPackageStrongs({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        result = await fetchBookPackageStrongs(\r\n          {username: 'unfoldingword', languageId:'en', \r\n          bookId: bookId, chapters: chapter, clearFlag: clearFlag\r\n        });  \r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n      let gkeys = Array.from(Object.keys(result.summary_ref_map));\r\n      let rootTitle = 'Lexicon Word Count: '+ result.grandTotalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <i>Linked entries:<b>{result.distinctReferences} unique</b>, {result.totalReferences} total links</i>\r\n              </Typography>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\" >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Strongs Entry</TableCell>\r\n                      <TableCell align=\"center\">Reference Count</TableCell>\r\n                      <TableCell align=\"center\">Word Count</TableCell>\r\n                      <TableCell align=\"center\">Unique Words</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {gkeys.sort().map(skey => (\r\n                      <TableRow key={skey}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          <Link href={convertToLink(skey,bookId)} target=\"_blank\" rel=\"noopener\" >\r\n                            {skey}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{result.summary_ref_map[skey]}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey] ? result.detail_article_map[skey]['total'] : 'Non Existent'}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey] ? result.detail_article_map[skey]['distinct'] : 'Non Existent'}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n            </TreeItem>\r\n          \r\n          </TreeView>\r\n\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageStrongs.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is empty string and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageStrongs);","import Path from 'path';\r\nimport { fetchOriginalBook } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\nimport * as wc from 'uw-word-count';\r\n\r\n\r\nasync function process_tags(key,val,bookId,summary_strong_map,\r\n    summary_article_map,detail_article_map, errors) \r\n{\r\n    if ( key !== 'strong' ) {return;}\r\n\r\n    let count = summary_strong_map.get(val);\r\n    if ( count === undefined ) count = 0;\r\n    count = count + 1;\r\n    summary_strong_map.set(val,count);\r\n    if ( count > 1 ) {\r\n        // already counted the words in this article\r\n        return;\r\n    }\r\n\r\n    if ( bookId === undefined ) {return;} \r\n    \r\n    // word count in the articles\r\n    let repo;\r\n    let repo_path;;\r\n    const whichTestament = cav.testament(bookId);\r\n    if ( whichTestament === 'old' ) {\r\n        repo = 'en_uhal';\r\n        repo_path = 'content/' + val + '.md';\r\n    } else {\r\n        repo = 'en_ugl';\r\n        repo_path = 'content/' + val + '/01.md';\r\n    }\r\n    let data = [];\r\n    let uri;\r\n    try {\r\n        uri = Path.join('unfoldingWord', \r\n            repo, 'raw/branch', 'master', repo_path\r\n        );\r\n        data = await gitApi.get({uri});    \r\n    } catch(error) {\r\n        const err = \"Lex Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        data = null;\r\n        return;\r\n    }\r\n    let counts = wc.wordCount(\"\"+data);\r\n    for ( var i=0; i < counts.allWords.length; i++ ) {\r\n        let thisword = counts.allWords[i];\r\n        let count = summary_article_map.get(thisword);\r\n        if ( count === undefined ) {\r\n            count = 0;\r\n        }\r\n        count = count + 1;\r\n        summary_article_map.set(thisword,count);\r\n    }\r\n    detail_article_map.set(val,counts);\r\n}\r\n\r\nexport function convertToLink(lnk,bookId) {\r\n    const ugl_path = 'https://git.door43.org/unfoldingWord/en_ugl/src/branch/master/content/';\r\n    const uhal_path = 'https://git.door43.org/unfoldingWord/en_uhal/src/branch/master/content/';\r\n    let s = lnk;\r\n    const whichTestament = cav.testament(bookId);\r\n    if ( whichTestament === 'old' ) {\r\n        s = uhal_path+lnk+\".md\";\r\n    } else {\r\n        s = ugl_path+lnk+\"/01.md\";\r\n    }\r\n    return s;\r\n  }\r\n  \r\nexport function validateInputProperties(bookId,chapters) {\r\n    //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n    if ( chapters === \"\" ) {\r\n      let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n      //console.log(\"validate ref\", ref);\r\n      return cav.validateReference(ref);\r\n    }\r\n    const chaparray = chapters.split(\",\");\r\n    for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n      let isValid = cav.validateReference(\r\n        {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n      );\r\n      if ( isValid ) continue;\r\n      return false\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  \r\nexport async function fetchBookPackageStrongs({\r\n    bookId,\r\n    chapters,\r\n    clearFlag,\r\n    languageId,\r\n  }) \r\n  {\r\n    let dbkey   = 'lex-'+bookId;\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey)\r\n    } else {\r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n    \r\n    let errors = [];\r\n    let _book;\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n    });\r\n    _book = await fetchOriginalBook(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId, \r\n        bookId: bookId, \r\n        uhbManifest: _manifests['uhb'], \r\n        ugntManifest: _manifests['ugnt']\r\n    });\r\n\r\n    // function to convert object to a map\r\n    const obj_to_map = ( ob => {\r\n        const mp = new Map();\r\n        Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\r\n        return mp;\r\n    });\r\n\r\n    // function to convert map to object\r\n    const map_to_obj = ( mp => {\r\n        const ob = {};\r\n        mp.forEach((v,k) => {ob[k]=v});\r\n        return ob;\r\n    });\r\n    \r\n    var book_map = obj_to_map(_book);\r\n    var summary_strong_map  = new Map();\r\n    var summary_article_map = new Map();\r\n    var detail_article_map  = new Map();\r\n    const chaparray = chapters.split(\",\");\r\n\r\n    for (var [k,v] of book_map.entries()) {\r\n        //console.log(\"Working on Chapter:\"+k);\r\n        if ( chapters === \"\" ) {\r\n            chapters = \"0\";\r\n        }\r\n        if ( chapters !== \"0\" ) {\r\n            if ( ! chaparray.includes(k) ) {\r\n                continue;\r\n            }\r\n        }\r\n        // the value is a verses object where key is verse number\r\n        // and value is an array of verse objects\r\n        var verses_map = obj_to_map(v);\r\n        //for (var [k1,v1] of verses_map.entries()) {\r\n        for (var v1 of verses_map.values()) {\r\n            //if ( k1 === \"front\" ) continue;\r\n            //console.log(\". Working on verse:\"+k1);\r\n            // the value is a set of tags for each object in a verse\r\n            var verse_map = obj_to_map(v1);\r\n            for (var v2 of verse_map.values()) {\r\n                for (var i=0; i < v2.length; i++) {\r\n                    var verse_obj_map = obj_to_map(v2[i]);\r\n                    for ( var [k3,v3] of verse_obj_map.entries()) {\r\n                        await process_tags(k3,v3,bookId,summary_strong_map,summary_article_map,detail_article_map,errors);\r\n                        if ( k3 === \"children\" ) {\r\n                            for (var j=0; j < v3.length; j++) {\r\n                                var children_map = obj_to_map(v3[j]);\r\n                                for ( var [k4,v4] of children_map.entries()) {\r\n                                    await process_tags(k4,v4,bookId,summary_strong_map,summary_article_map,detail_article_map,errors);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let totalWordCount = 0;\r\n    for ( var v5 of summary_strong_map.values() ) {\r\n        totalWordCount = totalWordCount + v5;\r\n    }\r\n\r\n    // count the number of words in the articles\r\n    let totalStrongWordCount = 0;\r\n    for ( var v6 of summary_article_map.values() ) {\r\n        totalStrongWordCount = totalStrongWordCount + v6;\r\n    }\r\n    \r\n    \r\n    let results = {};\r\n    results.summary_ref_map        = map_to_obj(summary_strong_map);\r\n    results.summary_article_map    = map_to_obj(summary_article_map);\r\n    results.detail_article_map     = map_to_obj(detail_article_map);\r\n    results.grandTotalWordCount    = totalStrongWordCount;\r\n    results.grandDistinctWordCount = summary_article_map.size;\r\n    results.totalReferences        = totalWordCount; \r\n    results.distinctReferences     = summary_strong_map.size;\r\n    // below is not words with counts; it is lex entries with counts\r\n    await bpstore.setItem(dbkey,results);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return results;\r\n  }\r\n/*\r\n\r\n## maps:\r\n- summary_ref_map     - how many times is each article referenced; number of entries is distinct number of articles referenced\r\n- summary_article_map - word frequency map across all articles\r\n- detail_article_map  - word counts for each article \r\n\r\n## attributes:\r\n- grandTotalWordCount = total across all articles\r\n- grandDistinctWordCount = distinct words across all articles\r\n- totalReferences - number of entries in summary_ref_map\r\n- distinctReferences - distinct number of articles referenced\r\n\r\n*/","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageTw, fetchObsTw} from './helpers';\r\nimport {validateInputProperties} from './helpers';\r\nimport {convertRC2Link} from './helpers';\r\n\r\nfunction BookPackageTw({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        if ( bookId === 'obs' ) {\r\n          result = await fetchObsTw({ bookId: bookId,  clearFlag: clearFlag });\r\n        } else {\r\n          result = await fetchBookPackageTw(\r\n            {username: 'unfoldingword', languageId:'en', \r\n            bookId: bookId, chapters: chapter, clearFlag: clearFlag\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            fetchBookPackageTw() Error: {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n      let gkeys = Array.from(Object.keys(result.summary_ref_map));\r\n\r\n      let rootTitle = 'UTW Word Count: '+ result.grandTotalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper}>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <i>Linked entries:<b>{gkeys.length} unique</b>, {result.totalReferences} total links</i>\r\n              </Typography>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Translation Word</TableCell>\r\n                      <TableCell align=\"center\">Reference Count</TableCell>\r\n                      <TableCell align=\"center\">Word Count</TableCell>\r\n                      <TableCell align=\"center\">Unique Words</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {gkeys.sort().map(skey => (\r\n                      <TableRow key={skey}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          <Link href={convertRC2Link({skey})} target=\"_blank\" rel=\"noopener\" >\r\n                          {skey}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{result.summary_ref_map[skey]}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey]['total']}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey]['distinct']}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  )\r\n};\r\n\r\nBookPackageTw.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is zero and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageTw);\r\n","import Path from 'path';\r\nimport { tsvParse } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\n\r\nexport function convertRC2Link(lnk) {\r\n    const path = 'https://git.door43.org/unfoldingWord/en_tw/src/branch/master';\r\n    let s;\r\n    s = lnk.skey;\r\n    s = s.replace(/^rc.*dict(\\/.*$)/, path+'$1.md');\r\n    return s;\r\n  }\r\n  \r\n\r\nexport function validateInputProperties(bookId,chapters) {\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\n/*\r\n## maps:\r\n- summary_ref_map     - how many times is each article referenced; number of entries is distinct number of articles referenced\r\n- summary_article_map - word frequency map across all articles\r\n- detail_article_map  - word counts for each article \r\n\r\n## attributes:\r\n- grandTotalWordCount = total across all articles\r\n- grandDistinctWordCount = distinct words across all articles\r\n- totalReferences - number of entries in summary_ref_map\r\n- distinctReferences - distinct number of articles referenced\r\n*/\r\nexport async function fetchBookPackageTw({\r\n    bookId,\r\n    chapters,\r\n    clearFlag,\r\n    languageId,\r\n  }) \r\n{\r\n    let dbkey = 'utw-'+bookId;\r\n\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n\r\n    const chaparray = chapters.split(\",\");\r\n    let errors = [];\r\n\r\n    // function to convert map to object\r\n    const map_to_obj = ( mp => {\r\n        const ob = {};\r\n        mp.forEach((v,k) => {ob[k]=v});\r\n        return ob;\r\n    });\r\n\r\n    // fetch the tWL TSV file \r\n    // https://git.door43.org/unfoldingWord/en_twl/raw/branch/master/twl_3JN.tsv\r\n    const uri = `https://git.door43.org/unfoldingWord/en_twl/raw/branch/master/twl_${bookId.toUpperCase()}.tsv`;\r\n    let _content;\r\n    try {\r\n        _content = await gitApi.getURL({uri});    \r\n    } catch(error) {\r\n        const err = \"UTN Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        throw new Error(err);\r\n    }\r\n\r\n    // now parse it to get the column with the rc container URI\r\n    let _rcContainerLinks = [];\r\n    let _tsv = tsvParse({tsv: _content});\r\n\r\n    // loop starts at 1, skipping the header row of the TSV file\r\n    for (var i=1; i<_tsv.length; i++) {\r\n        let ref = _tsv[i][0];\r\n        let chapter = ref.split(':')[0];\r\n        if ( chapters === \"\" ) {\r\n            chapters = \"0\";\r\n        }\r\n        if ( chapters !== \"0\" ) {\r\n            if ( ! chaparray.includes(chapter) ) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        _rcContainerLinks.push(_tsv[i][5])\r\n    }\r\n\r\n    // set up some maps to use to collect the counts\r\n    var summary_tw_map = new Map();\r\n    var summary_twArticle_map = new Map();\r\n    var summary_ByArticle_map = new Map();\r\n\r\n    for (let i=0; i<_rcContainerLinks.length; i++) {\r\n        // a resource link looks like: rc://*/tw/dict/bible/kt/god\r\n        // this maps to repo and filepath:\r\n        // - repo    : https://git.door43.org/unfoldingWord/en_tw/\r\n        // - filepath: bible/kt/god.md\r\n\r\n        await process_rcLink(_rcContainerLinks[i],summary_tw_map,\r\n            summary_twArticle_map,summary_ByArticle_map, errors)\r\n    }\r\n\r\n    // aggregate all the words across all articles\r\n    let wordAggregation = \"\";\r\n    for ( var w of summary_ByArticle_map.values() ) {\r\n        wordAggregation = wordAggregation + '\\n' + w.allWords.join('\\n');\r\n    }\r\n\r\n    let wcounts = wc.wordCount(wordAggregation);\r\n    /*\r\n    - summary_ref_map     - how many times is each article referenced; number of entries is distinct number of articles referenced\r\n    - summary_article_map - word frequency map across all articles\r\n    - detail_article_map  - word counts for each article \r\n    */\r\n    let results = {};\r\n    results.summary_ref_map = map_to_obj(summary_tw_map);\r\n    results.summary_article_map = map_to_obj(summary_twArticle_map);\r\n    results.detail_article_map  = map_to_obj(summary_ByArticle_map);\r\n\r\n    // count the total article references\r\n    let x = 0;\r\n    for (let v of summary_tw_map.values()) {\r\n        x = x + v;\r\n    }\r\n\r\n    results.grandTotalWordCount    = wcounts.total;\r\n    results.grandDistinctWordCount = wcounts.distinct;\r\n    results.totalReferences        = x;\r\n    results.distinctReferences     = summary_tw_map.size;\r\n    //console.log(\"utw article counts\", summary_ByArticle_map)\r\n    for ( let k of summary_tw_map.keys() ) {\r\n        if ( ! summary_ByArticle_map.has(k) ) {\r\n            console.log(\"Key does not exist in by article map\",k);\r\n        }\r\n    }\r\n\r\n    await bpstore.setItem(dbkey,results);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return results;\r\n}\r\n\r\nexport async function fetchObsTw({bookId,clearFlag}) {\r\n    let dbkey = 'utw-'+bookId;\r\n\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n\r\n    let errors = [];\r\n\r\n    // function to convert map to object\r\n    const map_to_obj = ( mp => {\r\n        const ob = {};\r\n        mp.forEach((v,k) => {ob[k]=v});\r\n        return ob;\r\n    });\r\n\r\n    // fetch the tWL TSV file \r\n    // https://git.door43.org/unfoldingWord/en_obs-twl/raw/branch/master/twl_OBS.tsv\r\n    const uri = 'https://git.door43.org/unfoldingWord/en_obs-twl/raw/branch/master/twl_OBS.tsv';\r\n    let _content;\r\n    try {\r\n        _content = await gitApi.getURL({uri});    \r\n    } catch(error) {\r\n        const err = \"UTN Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        throw new Error(err);\r\n    }\r\n\r\n    // now parse it to get the column with the rc container URI\r\n    let _rcContainerLinks = [];\r\n    let _tsv = tsvParse({tsv: _content});\r\n\r\n    // loop starts at 1, skipping the header row of the TSV file\r\n    for (var i=1; i<_tsv.length; i++) {\r\n        _rcContainerLinks.push(_tsv[i][5])\r\n    }\r\n\r\n    // set up some maps to use to collect the counts\r\n    var summary_tw_map = new Map();\r\n    var summary_twArticle_map = new Map();\r\n    var summary_ByArticle_map = new Map();\r\n\r\n    for (let i=0; i<_rcContainerLinks.length; i++) {\r\n        // a resource link looks like: rc://*/tw/dict/bible/kt/god\r\n        // this maps to repo and filepath:\r\n        // - repo    : https://git.door43.org/unfoldingWord/en_tw/\r\n        // - filepath: bible/kt/god.md\r\n\r\n        await process_rcLink(_rcContainerLinks[i],summary_tw_map,\r\n            summary_twArticle_map,summary_ByArticle_map, errors)\r\n    }\r\n\r\n    // aggregate all the words across all articles\r\n    let wordAggregation = \"\";\r\n    for ( var w of summary_ByArticle_map.values() ) {\r\n        wordAggregation = wordAggregation + '\\n' + w.allWords.join('\\n');\r\n    }\r\n\r\n    let wcounts = wc.wordCount(wordAggregation);\r\n    /*\r\n    - summary_ref_map     - how many times is each article referenced; number of entries is distinct number of articles referenced\r\n    - summary_article_map - word frequency map across all articles\r\n    - detail_article_map  - word counts for each article \r\n    */\r\n    let results = {};\r\n    results.summary_ref_map = map_to_obj(summary_tw_map);\r\n    results.summary_article_map = map_to_obj(summary_twArticle_map);\r\n    results.detail_article_map  = map_to_obj(summary_ByArticle_map);\r\n\r\n    // count the total article references\r\n    let x = 0;\r\n    for (let v of summary_tw_map.values()) {\r\n        x = x + v;\r\n    }\r\n\r\n    results.grandTotalWordCount    = wcounts.total;\r\n    results.grandDistinctWordCount = wcounts.distinct;\r\n    results.totalReferences        = x;\r\n    results.distinctReferences     = summary_tw_map.size;\r\n    //console.log(\"utw article counts\", summary_ByArticle_map)\r\n    for ( let k of summary_tw_map.keys() ) {\r\n        if ( ! summary_ByArticle_map.has(k) ) {\r\n            console.log(\"Key does not exist in by article map\",k);\r\n        }\r\n    }\r\n\r\n    await bpstore.setItem(dbkey,results);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return results;\r\n}\r\n\r\nasync function process_rcLink(link,summary_tw_map,\r\n    summary_twArticle_map,summary_ByArticle_map, errors) \r\n{\r\n    let count = summary_tw_map.get(link);\r\n    if ( count === undefined ) count = 0;\r\n    count = count + 1;\r\n    summary_tw_map.set(link,count);\r\n\r\n    if ( count > 1 ) {\r\n        // already counted the words in this article\r\n        return;\r\n    }\r\n\r\n    // word count in the articles\r\n    let data = [];\r\n    let repo_path = link.replace(/^rc.*dict(\\/.*$)/, '$1.md');\r\n    let uri;\r\n    try {\r\n        uri = Path.join('unfoldingWord', \r\n            'en_tw', 'raw/branch', 'master', repo_path\r\n        );\r\n        data = await gitApi.get({uri});  \r\n    } catch(error) {\r\n        const err = \"UTW Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        data = \" \";\r\n    }\r\n    let twcounts = wc.wordCount(\"\"+data);\r\n    for ( var i=0; i < twcounts.allWords.length; i++ ) {\r\n        let thisword = twcounts.allWords[i];\r\n        let count = summary_twArticle_map.get(thisword);\r\n        if ( count === undefined ) {\r\n            count = 0;\r\n        }\r\n        count = count + 1;\r\n        summary_twArticle_map.set(thisword,count);\r\n    }\r\n    summary_ByArticle_map.set(link,twcounts);\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageTq, fetchObsTq} from './helpers';\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\n\r\n/* begin material box imports and icons */\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n/* end material box imports and icons */\r\n\r\nfunction validateInputProperties(bookId,chapters) {\r\n  if ( bookId === 'obs' ) return true; // no need to validate\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction BookPackageTq({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_tq, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        if ( bookId === 'obs' ) {\r\n          result = await fetchObsTq({username: 'unfoldingword', bookId: bookId,  clearFlag: clearFlag});\r\n        } else {\r\n          result = await fetchBookPackageTq(\r\n            {username: 'unfoldingword', languageId:'en', \r\n            bookId: bookId, chapters: chapter, clearFlag: clearFlag}\r\n          );\r\n        }\r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n\r\n      let mt = wc.wf_to_mt(result.wordFrequency);\r\n\r\n      let rootTitle = 'UTQ Word Count: '+ result.total.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper}>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <i>Number of Questions:<b>{result.l1count}</b></i>\r\n              </Typography>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title={mt.title}\r\n                  columns={mt.columns}\r\n                  data={mt.data}\r\n                  options={mt.options}\r\n                />\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_tq}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nBookPackageTq.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n   /** Comma list of chapters to package. Default is zero and returns all chapters of book*/\r\n   chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n   /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageTq);\r\n\r\n","import * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\nimport { tsvParse, translationQuestions } from '../../../core/helpers.js'\r\n\r\n\r\nexport async function fetchBookPackageTq({\r\nbookId,\r\nchapters,\r\nclearFlag,\r\nlanguageId,\r\n}) \r\n{\r\n    let dbkey = 'utq-'+bookId;\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let sumtotals = await bpstore.getItem(dbkey);\r\n        if ( sumtotals !== null ) {\r\n            return sumtotals;\r\n        }\r\n    }\r\n\r\n    //New code\r\n    let _questions = [];\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n    });\r\n    _questions = await translationQuestions({\r\n        username: 'unfoldingword',\r\n        languageId: languageId, \r\n        bookId: bookId, \r\n        manifest: _manifests['tq']\r\n    });\r\n    \r\n    let errors = [];\r\n    if ( _questions === null ) {\r\n        errors.push(\"UTQ Error: Cannot access:\",bookId,\" -- error message not available\")\r\n    }\r\n\r\n    const chaparray = chapters.split(\",\");\r\n    let allQuestions = \"\";\r\n    let total=0;\r\n\r\n    // loop starts at 1, skipping the header row of the TSV file\r\n    for (var i=1; i<_questions.length; i++) {\r\n        let ch = _questions[i][0].split(\":\")[0];\r\n        if ( ch === undefined ) { \r\n            //console.log(\"row i=\",i,\" has chapter value undefined\");\r\n            continue; \r\n        }\r\n        if ( chapters !== \"\" ) {\r\n            if ( ! chaparray.includes(ch) ) {\r\n                continue;\r\n            }\r\n        }\r\n        total = total + 1;\r\n        let question = _questions[i][5];\r\n        let response = _questions[i][6];\r\n        allQuestions = allQuestions + '\\n' + question + '\\n' + response;\r\n    }\r\n\r\n    let vcounts = wc.wordCount(allQuestions);\r\n    // overwrite l1count with correct value\r\n    vcounts.l1count = total;\r\n    //.setItem('utq-'+bookId,JSON.stringify(vcounts.wordFrequency))\r\n    await bpstore.setItem(dbkey, vcounts);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return vcounts;\r\n}\r\n\r\nexport async function fetchObsTq({\r\n    bookId,\r\n    clearFlag,\r\n    }) \r\n    {\r\n        let errors = [];\r\n        let dbkey = 'utq-'+bookId;\r\n        if ( clearFlag === undefined ) { clearFlag = true }\r\n    \r\n        if ( clearFlag ) {\r\n            await bpstore.removeItem(dbkey);\r\n        } else { \r\n            // use the data already present\r\n            let x = await bpstore.getItem(dbkey);\r\n            if ( x !== null ) {\r\n                return x;\r\n            }\r\n        }\r\n\r\n        const uri = 'https://git.door43.org/unfoldingWord/en_translation-annotations/raw/branch/master/OBS/OBS_tq.tsv';\r\n        let _content;\r\n        try {\r\n            _content = await gitApi.getURL({uri});    \r\n        } catch(error) {\r\n            const err = \"UTQ Error on:\"+uri+\" is:\"+error;\r\n            errors.push(err);\r\n            console.log(err);\r\n            throw new Error(err);\r\n        }\r\n    \r\n        if ( _content === null ) {\r\n            errors.push(\"UTQ Error: Cannot access:\",bookId,\" -- error message not available\")\r\n        }\r\n    \r\n        let allNotes = \"\";\r\n    \r\n        let _notes = tsvParse({tsv: _content});\r\n        let total=0;\r\n    \r\n        // loop starts at 1, skipping the header row of the TSV file\r\n        for (var i=1; i<_notes.length; i++) {\r\n            total = total + 1;\r\n            let annotation = _notes[i][6];\r\n            allNotes = allNotes + '\\n' + annotation;\r\n        }\r\n        // count words in occurrence notes\r\n        allNotes = allNotes.replace(/\\\\n/g, \"\");\r\n\r\n        let wcounts = wc.wordCount(allNotes);\r\n        // add one more UTQ attribute, namely, the number of questions\r\n        // currently the attribute is named \"l1count\" due to former use of \r\n        // markdown level 1 headings to count them.\r\n        wcounts.l1count = _notes.length;\r\n\r\n        await bpstore.setItem(dbkey,wcounts);\r\n        if ( errors.length > 0 ) {\r\n            await bpstore.setItem(dbkey+\"-errors\", errors);\r\n        }\r\n        return wcounts;\r\n    }\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {fetchBookPackageTn, fetchObsTn} from './helpers';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\n\r\n/* begin material box imports and icons */\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n/* end material box imports and icons */\r\n\r\nfunction validateInputProperties(bookId,chapters) {\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( bookId === 'obs' ) return true; // no need to validate\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction BookPackageTn({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        if ( bookId === 'obs' ) {\r\n          result = await fetchObsTn({username: 'unfoldingword', bookId: bookId,  clearFlag: clearFlag});\r\n        } else {\r\n          result = await fetchBookPackageTn(\r\n            {username: 'unfoldingword', languageId:'en', \r\n            bookId: bookId, chapters: chapter, clearFlag: clearFlag}\r\n          );\r\n        }\r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n\r\n      let mt = wc.wf_to_mt(result.wordFrequency);\r\n\r\n      let rootTitle = 'UTN Word Count: '+ result.total.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper}>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <i>Number of Notes:<b>{result.totalNotes}</b></i>\r\n              </Typography>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title={mt.title}\r\n                  columns={mt.columns}\r\n                  data={mt.data}\r\n                  options={mt.options}\r\n                />\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n  \r\nBookPackageTn.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is zero and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageTn);\r\n\r\n","import { translationNotes, tsvParse } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\nexport async function fetchBookPackageTn({\r\nbookId,\r\nchapters,\r\nclearFlag,\r\nlanguageId,\r\n}) \r\n{\r\n    let dbkey = 'utn-'+bookId;\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n\r\n    let _notes = [];\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n    });\r\n    _notes = await translationNotes(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId, \r\n        bookId: bookId, \r\n        manifest: _manifests['tn']\r\n    });\r\n\r\n    let errors = [];\r\n    if ( _notes === null ) {\r\n        errors.push(\"UTN Error: Cannot access:\",bookId,\" -- error message not available\")\r\n    }\r\n\r\n    let allNotes = \"\";\r\n\r\n    const chaparray = chapters.split(\",\");\r\n    let total=0;\r\n\r\n    // loop starts at 1, skipping the header row of the TSV file\r\n    for (var i=1; i<_notes.length; i++) {\r\n        let ch = _notes[i][1]\r\n        if ( ch === undefined ) { \r\n            //console.log(\"row i=\",i,\" has chapter value undefined\");\r\n            continue; \r\n        }\r\n        if ( chapters !== \"\" ) {\r\n            if ( ! chaparray.includes(ch) ) {\r\n                continue;\r\n            }\r\n        }\r\n        total = total + 1;\r\n        let occurrenceNote = _notes[i][8];\r\n        allNotes = allNotes + '\\n' + occurrenceNote;\r\n    }\r\n    // count words in occurrence notes\r\n    let wcounts = wc.wordCount(allNotes);\r\n    // add one more UTN attribute, namely, the number of notes\r\n    wcounts.totalNotes = total;\r\n    await bpstore.setItem(dbkey,wcounts);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return wcounts;\r\n}\r\n\r\nexport async function fetchObsTn({\r\n    bookId,\r\n    clearFlag,\r\n    }) \r\n    {\r\n        let errors = [];\r\n        let dbkey = 'utn-'+bookId;\r\n        if ( clearFlag === undefined ) { clearFlag = true }\r\n    \r\n        if ( clearFlag ) {\r\n            await bpstore.removeItem(dbkey);\r\n        } else { \r\n            // use the data already present\r\n            let x = await bpstore.getItem(dbkey);\r\n            if ( x !== null ) {\r\n                return x;\r\n            }\r\n        }\r\n\r\n        const uri = 'https://git.door43.org/unfoldingWord/en_translation-annotations/raw/branch/master/OBS/OBS_tn.tsv';\r\n        let _content;\r\n        try {\r\n            _content = await gitApi.getURL({uri});    \r\n        } catch(error) {\r\n            const err = \"UTN Error on:\"+uri+\" is:\"+error;\r\n            errors.push(err);\r\n            console.log(err);\r\n            throw new Error(err);\r\n        }\r\n    \r\n        if ( _content === null ) {\r\n            errors.push(\"UTN Error: Cannot access:\",bookId,\" -- error message not available\")\r\n        }\r\n    \r\n        let allNotes = \"\";\r\n    \r\n        let _notes = tsvParse({tsv: _content});\r\n        let total=0;\r\n    \r\n        // loop starts at 1, skipping the header row of the TSV file\r\n        for (var i=1; i<_notes.length; i++) {\r\n            total = total + 1;\r\n            let annotation = _notes[i][6];\r\n            allNotes = allNotes + '\\n' + annotation;\r\n        }\r\n        // count words in occurrence notes\r\n        let wcounts = wc.wordCount(allNotes);\r\n        // add one more UTN attribute, namely, the number of notes\r\n        wcounts.totalNotes = total;\r\n        await bpstore.setItem(dbkey,wcounts);\r\n        if ( errors.length > 0 ) {\r\n            await bpstore.setItem(dbkey+\"-errors\", errors);\r\n        }\r\n        return wcounts;\r\n    }\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {fetchBookPackageTa} from './helpers';\r\nimport { Link } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\n\r\nfunction validateInputProperties(bookId,chapters) {\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction convertToLink(lnk) {\r\n  const path = 'https://git.door43.org/unfoldingWord/en_ta/src/branch/master/translate/';\r\n  return path+lnk;\r\n}\r\n\r\nfunction BookPackageTa({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        result = await fetchBookPackageTa(\r\n          {username: 'unfoldingword', languageId:'en', \r\n          bookId: bookId, chapters: chapter, clearFlag: clearFlag}\r\n        );\r\n        } catch (error) {\r\n        setVal(\r\n          <div>\r\n            fetchBookPackageTa() Error: {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n\r\n      let tkeys = Array.from(Object.keys(result.summary_ref_map));\r\n      let uniqueAndSorted = [...new Set(tkeys)].sort() \r\n\r\n      let rootTitle = 'UTA Word Count: '+ result.grandTotalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper}>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <i>Linked entries:<b>{uniqueAndSorted.length} unique</b>, {result.totalReferences} total links</i>\r\n              </Typography>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Translation Academy</TableCell>\r\n                      <TableCell align=\"center\">Reference Count</TableCell>\r\n                      <TableCell align=\"center\">Word Count</TableCell>\r\n                      <TableCell align=\"center\">Unique Words</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {uniqueAndSorted.map(skey => (\r\n                      <TableRow key={skey}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          <Link href={convertToLink(skey)} target=\"_blank\" rel=\"noopener\" >\r\n                          {skey}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{result.summary_ref_map[skey]}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey]['total']}</TableCell>\r\n                        <TableCell align=\"center\">{result.detail_article_map[skey]['distinct']}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n  \r\nBookPackageTa.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is zero and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageTa);\r\n\r\n","import { translationNotes } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport Path from 'path';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\nexport async function fetchBookPackageTa({\r\nbookId,\r\nchapters,\r\nclearFlag,\r\nlanguageId,\r\n}) \r\n{\r\n    let dbkey = 'uta-'+bookId\r\n\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n    let _notes = [];\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n        });\r\n    \r\n    let resourceId = bookId === 'obs' ? 'obs-tn' : 'tn'\r\n    \r\n    _notes = await translationNotes(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId, \r\n        bookId: bookId, \r\n        manifest: _manifests[resourceId]\r\n    });\r\n\r\n    // function to convert map to object\r\n    const map_to_obj = ( mp => {\r\n        const ob = {};\r\n        mp.forEach((v,k) => {ob[k]=v});\r\n        return ob;\r\n    });\r\n    \r\n    let tacount = 0;\r\n    let tarticles = [];\r\n    let summary_tarticles_map = new Map();\r\n    let detail_tarticles_map = new Map();\r\n\r\n    const chaparray = chapters.split(\",\");\r\n\r\n    // loop starts at 1, skipping the header row of the TSV file\r\n    for (var i = 1; i < _notes.length; i++) {\r\n        let ch = '';\r\n\r\n        //Make this distinction while tsv number of columns from en_tn (9 columns) differs from en_obs-tn (7 columns)\r\n        if (bookId === 'obs') {\r\n            ch = _notes[i][0].split(\":\")[0];\r\n        } else {\r\n            ch = _notes[i][1]\r\n        }\r\n        if ( ch === undefined ) { continue; }\r\n        if ( chapters !== \"\" ) {\r\n            if ( ! chaparray.includes(ch) ) {\r\n                continue;\r\n            }\r\n        }\r\n        let tarticle = '';\r\n        \r\n        //Make this distinction while tsv number of columns from en_tn (9 columns) differs from en_obs-tn (7 columns)\r\n        if (bookId === 'obs') {\r\n            let taLink = _notes[i][3].match(/(?<=translate\\/).*/);\r\n            tarticle = taLink ? taLink[0] : undefined;\r\n        } else {\r\n            tarticle = _notes[i][4];\r\n        }\r\n        if ( tarticle === undefined ) { continue; }\r\n        if ( tarticle !== \"\" ) {\r\n            tacount = tacount + 1;\r\n            tarticles.push(tarticle);\r\n\r\n            let count = summary_tarticles_map.get(tarticle);\r\n            if ( count === undefined ) count = 0;\r\n            count = count + 1;\r\n            summary_tarticles_map.set(tarticle,count);\r\n        }\r\n    }\r\n\r\n    // Now process the tA articles. Each is in markdown format in a folder\r\n    // with three files: title.md, sub-title.me, and 01.md.\r\n    // loop thru all three files and concatenating the text\r\n    // For each article, track distinct and total words; store in a map\r\n    const repo = languageId + \"_ta\";\r\n    const slash = \"/\";\r\n    const base = 'translate/';\r\n    const mdfiles = [\"title.md\",\"sub-title.md\",\"01.md\"];\r\n    let grandAllText = \"\";\r\n    let uniqSorted = [...new Set(tarticles)].sort()\r\n    let errors = [];\r\n    for (var j=0; j < uniqSorted.length; j++) {\r\n        let alltext = \"\"; // empty it out for each set\r\n        for (var k=0; k < mdfiles.length; k++) {\r\n            let repo_path = base + uniqSorted[j] + slash + mdfiles[k];\r\n            let data = [];\r\n            let uri;\r\n            try {\r\n                uri = Path.join('unfoldingWord', \r\n                    repo, 'raw/branch', 'master', repo_path\r\n                );\r\n                data = await gitApi.get({uri});    \r\n            } catch(error) {\r\n                const err = \"UTA Error on:\"+uri+\" is:\"+error;\r\n                errors.push(err);\r\n                console.log(err);\r\n                    data = null;\r\n                continue;\r\n            }\r\n            if ( data == null) {\r\n                continue;\r\n            } \r\n            alltext = alltext + ' ' + data;\r\n        }\r\n        grandAllText = grandAllText + ' ' + alltext;\r\n        // now count the words for the article\r\n        let tacounts = wc.wordCount(alltext);\r\n        detail_tarticles_map.set(uniqSorted[j],tacounts);\r\n    }\r\n    let result = {};\r\n    result[\"summary_ref_map\"] = map_to_obj(summary_tarticles_map);\r\n    // the below has the count data arranged per article\r\n    result[\"detail_article_map\"] = map_to_obj(detail_tarticles_map);\r\n    // finally get the grand totals\r\n    let x = wc.wordCount(grandAllText);\r\n    result[\"summary_article_map\"]    = x.wordFrequency;\r\n    result[\"grandDistinctWordCount\"] = x.distinct;\r\n    result[\"grandTotalWordCount\"]    = x.total;\r\n\r\n    result[\"totalReferences\"] = tacount;\r\n    result[\"distinctReferences\"] = summary_tarticles_map.size;\r\n\r\n    await bpstore.setItem(dbkey,result);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return result;\r\n}\r\n\r\n/*\r\n## maps:\r\n- summary_ref_map     - how many times is each article referenced; number of entries is distinct number of articles referenced\r\n- summary_article_map - word frequency map across all articles\r\n- detail_article_map  - word counts for each article \r\n\r\n## attributes:\r\n- grandTotalWordCount = total across all articles\r\n- grandDistinctWordCount = distinct words across all articles\r\n- totalReferences - number of entries in summary_ref_map\r\n- distinctReferences - distinct number of articles referenced\r\n*/","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageULT} from './helpers';\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\n\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\n\r\n/* begin material box imports and icons */\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n/* end material box imports and icons */\r\n\r\n\r\nfunction validateInputProperties(bookId,chapters) {\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nfunction BookPackageUlt({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        result = await fetchBookPackageULT(\r\n          {username: 'unfoldingword', languageId:'en', \r\n          bookId: bookId, chapters: chapter, clearFlag: clearFlag\r\n        });  \r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n      let mt = wc.wf_to_mt(result.wordFrequency);\r\n      let totalWordCount = result.total;\r\n\r\n      let rootTitle = 'ULT Word Count: '+ totalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title={mt.title}\r\n                  columns={mt.columns}\r\n                  data={mt.data}\r\n                  options={mt.options}\r\n                />\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageUlt.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is empty string and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageUlt);","import { fetchBook } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\n// function to convert object to a map\r\nconst obj_to_map = ( ob => {\r\n    const mp = new Map();\r\n    Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\r\n    return mp;\r\n});\r\n\r\nfunction process_tags(v3,alltext,level) {\r\n    for (var j=0; j < v3.length; j++) {\r\n        let children_map = obj_to_map(v3[j]);\r\n        if ( children_map.get(\"type\") === \"word\" ) {\r\n           alltext.push(children_map.get(\"text\").toLowerCase())\r\n           continue;\r\n        }\r\n        let children = children_map.get(\"children\");\r\n        if ( children !== undefined ) {\r\n            // Ok, we have a lower level list of children properties\r\n            // we recurse to pick them up\r\n            process_tags(children,alltext,level+1);\r\n        }\r\n    }\r\n}\r\n\r\nexport async function fetchBookPackageULT({\r\n    bookId,\r\n    chapters,\r\n    clearFlag,\r\n    languageId,\r\n  }) \r\n  {\r\n    let dbkey = 'ult-'+bookId;\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n   }\r\n\r\n    let _book;\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n    });\r\n    _book = await fetchBook(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId, \r\n        resourceId: 'ult',\r\n        bookId: bookId, \r\n        manifest: _manifests['ult'], \r\n    });\r\n\r\n    let errors = [];\r\n    if ( _book === null ) {\r\n        errors.push(\"ULT Error: Cannot access \",bookId,\" -- error message not available\")\r\n    }\r\n\r\n    //console.log(\"_book ult\",_book);\r\n    var book_map = obj_to_map(_book);\r\n    //var summary_ult_map = new Map();\r\n    const chaparray = chapters.split(\",\");\r\n    // an array to keep the unaligned text we find\r\n    let alltext = [];\r\n\r\n    for (var [k,v] of book_map.entries()) {\r\n        //console.log(\"Working on Chapter:\"+k);\r\n        if ( chapters === \"\" ) {\r\n            chapters = \"0\";\r\n        }\r\n        if ( chapters !== \"0\" ) {\r\n            if ( ! chaparray.includes(k) ) {\r\n                continue;\r\n            }\r\n        }\r\n        // the value is a verses object where key is verse number\r\n        // and value is an array of verse objects\r\n        var verses_map = obj_to_map(v);\r\n        //for (var [k1,v1] of verses_map.entries()) {\r\n        for (var v1 of verses_map.values()) {\r\n                //if ( k1 === \"front\" ) continue;\r\n            //console.log(\". Working on verse:\"+k1);\r\n            // the value is a set of tags for each object in a verse\r\n            var verse_map = obj_to_map(v1);\r\n            for (var v2 of verse_map.values()) {\r\n                for (var i=0; i < v2.length; i++) {\r\n                    var verse_obj_map = obj_to_map(v2[i]);\r\n                    // unaligned text method\r\n                    if ( verse_obj_map.has(\"text\") ) {\r\n                        alltext.push(verse_obj_map.get(\"text\").toLowerCase());\r\n                    }\r\n                    // aligned text method\r\n                    if ( verse_obj_map.get(\"type\") === \"word\" ) {\r\n                        alltext.push(verse_obj_map.get(\"text\").toLowerCase())\r\n                    }\r\n                    for ( var [k3,v3] of verse_obj_map.entries()) {\r\n                        if ( k3 === \"children\" ) {\r\n                            //process_tags(v3,summary_ult_map,1);\r\n                            process_tags(v3,alltext,1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let wcounts = wc.wordCount(alltext.join('\\n'));\r\n    await bpstore.setItem(dbkey,wcounts)\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return wcounts;\r\n  }\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageUST} from './helpers';\r\nimport * as cav from '../../../core/chaptersAndVerses';\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\n\r\n/* begin material box imports and icons */\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n/* end material box imports and icons */\r\n\r\n\r\nfunction validateInputProperties(bookId,chapters) {\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nfunction BookPackageUst({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    const result = validateInputProperties(bookId, chapter);\r\n    let chlist = chapter ? chapter : \"(ALL)\";\r\n    if ( ! result ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            or Chapter(s) {chlist}\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        result = await fetchBookPackageUST(\r\n          {username: 'unfoldingword', languageId:'en', \r\n          bookId: bookId, chapters: chapter, clearFlag: clearFlag\r\n        });  \r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n      let mt = wc.wf_to_mt(result.wordFrequency);\r\n      let totalWordCount = result.total;\r\n\r\n      let rootTitle = 'UST Word Count: '+ totalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title={mt.title}\r\n                  columns={mt.columns}\r\n                  data={mt.data}\r\n                  options={mt.options}\r\n                />\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageUst.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is empty string and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageUst);","import { fetchBook } from '../../../core/helpers.js'\r\nimport * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\n// function to convert object to a map\r\nconst obj_to_map = ( ob => {\r\n    const mp = new Map();\r\n    Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\r\n    return mp;\r\n});\r\n\r\nfunction process_tags(v3,alltext,level) {\r\n    //if ( level > 4 ) console.log(\"UST Level:\",level);\r\n    for (var j=0; j < v3.length; j++) {\r\n        let children_map = obj_to_map(v3[j]);\r\n        //console.log(\"chilren_map\",children_map);\r\n        if ( children_map.get(\"type\") === \"word\" ) {\r\n            alltext.push(children_map.get(\"text\").toLowerCase());\r\n            continue;\r\n        }\r\n        let children = children_map.get(\"children\");\r\n        if ( children !== undefined ) {\r\n            // Ok, we have a lower level list of children properties\r\n            // we recurse to pick them up\r\n            process_tags(children,alltext,level+1);\r\n        }\r\n    }\r\n}\r\n\r\nexport async function fetchBookPackageUST({\r\n    bookId,\r\n    chapters,\r\n    clearFlag,\r\n    languageId,\r\n  }) \r\n  {\r\n    let dbkey = 'ust-'+bookId;\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n   }\r\n\r\n    let _book;\r\n    const _manifests = await gitApi.fetchResourceManifests(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId\r\n    });\r\n    _book = await fetchBook(\r\n        {username: 'unfoldingword', \r\n        languageId: languageId, \r\n        resourceId: 'ust',\r\n        bookId: bookId, \r\n        manifest: _manifests['ust'], \r\n    });\r\n\r\n    let errors = [];\r\n    if ( _book === null ) {\r\n        errors.push(\"UST Error: Cannot access \",bookId,\" -- error message not available\")\r\n    }\r\n\r\n    var book_map = obj_to_map(_book);\r\n    //var summary_ust_map = new Map();\r\n    const chaparray = chapters.split(\",\");\r\n    let alltext = [];\r\n\r\n    for (var [k,v] of book_map.entries()) {\r\n        //console.log(\"Working on Chapter:\"+k);\r\n        if ( chapters === \"\" ) {\r\n            chapters = \"0\";\r\n        }\r\n        if ( chapters !== \"0\" ) {\r\n            if ( ! chaparray.includes(k) ) {\r\n                continue;\r\n            }\r\n        }\r\n        // the value is a verses object where key is verse number\r\n        // and value is an array of verse objects\r\n        var verses_map = obj_to_map(v);\r\n        for (var v1 of verses_map.values()) {\r\n            //if ( k1 === \"front\" ) continue;\r\n            //console.log(\". Working on verse:\"+k1);\r\n            // the value is a set of tags for each object in a verse\r\n            var verse_map = obj_to_map(v1);\r\n            for (var v2 of verse_map.values()) {\r\n                //console.log(\".. Working on v2:\",v2);\r\n                for (var i=0; i < v2.length; i++) {\r\n                    var verse_obj_map = obj_to_map(v2[i]);\r\n                    // unaligned text method\r\n                    if ( verse_obj_map.has(\"text\") ) {\r\n                        alltext.push(verse_obj_map.get(\"text\").toLowerCase());\r\n                    }\r\n                    // aligned text method\r\n                    if ( verse_obj_map.get(\"type\") === \"word\" ) {\r\n                        alltext.push(verse_obj_map.get(\"text\").toLowerCase());\r\n                    }\r\n                    for ( var [k3,v3] of verse_obj_map.entries()) {\r\n                        if ( k3 === \"children\" ) {\r\n                            process_tags(v3,alltext,1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let wcounts = wc.wordCount(alltext.join('\\n'));\r\n    await bpstore.setItem(dbkey,wcounts)\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return wcounts;\r\n  }\r\n","export {default} from './BookPackageRollup';\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport * as cav from '../../core/chaptersAndVerses';\r\nimport {bpstore} from '../../core/setupBpDatabase'\r\nimport BookPackageTotals from '../book_package_totals';\r\nimport SinglePackageTotal from '../single_package_total';\r\n//import BookPackageStrongs from '../book_package/book_package_strongs';\r\nimport BookPackageTw from '../book_package/book_package_tw';\r\nimport BookPackageTn from '../book_package/book_package_tn';\r\nimport BookPackageTa from '../book_package/book_package_ta';\r\nimport BookPackageTq from '../book_package/book_package_tq';\r\nimport BookPackageUlt from '../book_package/book_package_ult';\r\nimport BookPackageUst from '../book_package/book_package_ust';\r\nimport BookPackageObs from '../book_package/book_package_obs';\r\n\r\nasync function validateInputProperties(bookId,chapters) {\r\n  if ( bookId === 'obs' ) return true;\r\n  //console.log(\"validate bookId\",bookId,\", chapters:\",chapters);\r\n  if ( chapters === \"\" ) {\r\n    let ref = {bookId: bookId, chapter: 1, verse: 1};\r\n    //console.log(\"validate ref\", ref);\r\n    return cav.validateReference(ref);\r\n  }\r\n  const chaparray = chapters.split(\",\");\r\n  for (var vip = 0; vip < chaparray.length; vip++ ) {\r\n    let isValid = cav.validateReference(\r\n      {bookId: bookId, chapter: chaparray[vip], verse: 1}\r\n    );\r\n    if ( isValid ) continue;\r\n    return false\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction BookPackageRollup({\r\n  bookId,\r\n  chapter,\r\n  clearFlag,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  \r\n  useEffect( () => {\r\n    const fetchData = async () => {\r\n\r\n      let result;\r\n      const bookarray = bookId.split(\",\");\r\n      for ( let bi = 0; bi < bookarray.length; bi++ ) {\r\n        result = await validateInputProperties(bookarray[bi], chapter);\r\n        if ( !result ) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      let chlist = chapter ? chapter : \"(ALL)\";\r\n      if ( result ) {\r\n        await bpstore.setItem('bookid',bookId);\r\n        setVal(\r\n          <Paper className={classes.paper} >\r\n            <BookPackageTotals bookId={bookId} />\r\n            {bookarray.sort().map(skey => (\r\n              <Paper>\r\n                <TreeView\r\n                  defaultCollapseIcon={<ExpandMoreIcon />}\r\n                  defaultExpandIcon={<ChevronRightIcon />}\r\n                  defaultExpanded={[\"1\"]}\r\n                >\r\n                  <TreeItem nodeId=\"1\" label={\r\n                    <Typography variant=\"h6\" >\r\n                      { skey === 'obs' ? 'OBS' : cav.bookTitleById(skey)} <SinglePackageTotal bookId={skey} /> \r\n                    </Typography>\r\n                  } \r\n                  >\r\n                    { skey === 'obs' ? \r\n                    <>\r\n                    <BookPackageObs bookId={skey} clearFlag={clearFlag} />\r\n                    <BookPackageTa bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTw bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTn bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTq bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <BookPackageUlt bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageUst bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTa bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTw bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTn bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    <BookPackageTq bookId={skey} chapter={chapter} clearFlag={clearFlag} />\r\n                    </>\r\n                    }\r\n                  </TreeItem>\r\n                </TreeView>\r\n              </Paper>\r\n            ))}\r\n          </Paper>\r\n        );    \r\n      } else {\r\n        setVal(\r\n          <Paper className={classes.paper} >\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Invalid Book \"{bookId.toUpperCase()}\" \r\n              or Chapter(s) {chlist}\r\n            </Typography> \r\n          </Paper>\r\n        );\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageRollup.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Comma list of chapters to package. Default is empty string and returns all chapters of book*/\r\n  chapter: PropTypes.string,\r\n  /** Optional flag to clear and refetch all data. Default is true. */\r\n  clearFlag: PropTypes.bool,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageRollup);","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../core/setupBpDatabase';\r\n\r\n \r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nasync function bp_totals(delay,iterations,setVal) {\r\n  // function to convert object to a map\r\n  const obj_to_map = ( ob => {\r\n    const mp = new Map();\r\n    Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\r\n    return mp;\r\n  });\r\n\r\n  let resourcePrefixes = ['uta-','utw-','utq-','utn-','ult-','ust-','obs-'];\r\n  let obsResourePrefixes = ['uta-','utw-','utq-','utn-', 'obs-']\r\n\r\n  // ult,ust,utn,utq,utw,uta\r\n  let ult_total = 0;\r\n  let ust_total = 0;\r\n  let utn_total = 0;\r\n  let utq_total = 0;\r\n  let utw_total = 0;\r\n  let uta_total = 0;\r\n  let obs_total = 0;\r\n  \r\n  await (async function theLoop (iterations) {\r\n    setTimeout( async function () {\r\n      let tbid = await bpstore.getItem('bookid');\r\n      if ( tbid === null ) {\r\n        setVal(\"Please run BookPackageRollup\")\r\n      } else if (--iterations) {      // If i > 0, keep going\r\n        const bookarray = tbid.split(\",\");\r\n        let all_map = new Map();\r\n        let resource_map = new Map();\r\n        let allPresent = true;\r\n\r\n        for ( let ri = 0; ri < resourcePrefixes.length; ri++ ) {\r\n          for ( let bi = 0; bi < bookarray.length; bi++ ) {\r\n            if ( resourcePrefixes[ri] === 'obs-' ) {\r\n              if ( bookarray[bi] !== 'obs' ) {\r\n                // The \"resource\" obs only has one possible book, namely \"obs\"\r\n                // so skip it unless this is the case (both are obs)\r\n                continue;\r\n              }\r\n            }\r\n\r\n            if ( bookarray[bi] === 'obs' ) {\r\n              if ( resourcePrefixes[ri] === obsResourePrefixes[0] ||\r\n                   resourcePrefixes[ri] === obsResourePrefixes[1] ||\r\n                   resourcePrefixes[ri] === obsResourePrefixes[2] ||\r\n                   resourcePrefixes[ri] === obsResourePrefixes[3] ||\r\n                   resourcePrefixes[ri] === obsResourePrefixes[4]\r\n              ) {\r\n                // let it pass\r\n              } else {\r\n                continue; // skip it! obs only has the four resource types\r\n              }\r\n            }\r\n\r\n            let lsk = resourcePrefixes[ri]+bookarray[bi];\r\n            let x = await bpstore.getItem(lsk);\r\n            if ( x === null ) {\r\n              allPresent = false;\r\n              console.log(\"iter\",iterations,\",missing:\",lsk);\r\n              break;\r\n            }\r\n            resource_map.set(lsk,x)\r\n          }\r\n        }\r\n\r\n        if ( allPresent ) {\r\n          console.log(\"All Present!\");\r\n          //\r\n          // process uta: dedup first\r\n          //\r\n          let uta_dedup = new Map();\r\n          for ( let [k,v] of resource_map.entries() ) {\r\n            if ( k.startsWith(\"uta\") ) {\r\n              //let o = JSON.parse(v);\r\n              let omap = obj_to_map(v.detail_article_map);\r\n              for ( let [x,y] of omap.entries() ) {\r\n                // Key x is the uta article\r\n                if ( uta_dedup.get(x) ) { continue; }\r\n                uta_dedup.set(x,y.wordFrequency);\r\n              }\r\n            }\r\n          }\r\n          // add in uta contribution\r\n          for ( let v of uta_dedup.values() ) {\r\n            let y = obj_to_map(v);\r\n            for ( let [m,n] of y.entries() ) {\r\n              let z = all_map.get(m);\r\n              if ( z === undefined ) z = 0;\r\n              all_map.set(m, z + n);\r\n              uta_total = uta_total + n;\r\n            }\r\n          }\r\n          //\r\n          // process utw: dedup first\r\n          //\r\n          let utw_dedup = new Map();\r\n          for ( let [k,v] of resource_map.entries() ) {\r\n            if ( k.startsWith(\"utw\") ) {\r\n              //let o = JSON.parse(v);\r\n              let omap = obj_to_map(v.detail_article_map);\r\n              for ( let [x,y] of omap.entries() ) {\r\n                // Key x is the utw article\r\n                if ( utw_dedup.get(x) ) { continue; }\r\n                utw_dedup.set(x,y.wordFrequency);\r\n              }\r\n            }\r\n          }\r\n          // add in utw contribution\r\n          for ( let v of utw_dedup.values() ) {\r\n            let y = obj_to_map(v);\r\n            for ( let [m,n] of y.entries() ) {\r\n              let z = all_map.get(m);\r\n              if ( z === undefined ) z = 0;\r\n              all_map.set(m, z + n);\r\n              utw_total = utw_total + n;\r\n            }\r\n          }\r\n\r\n          //console.log(\"Post UTA/W all_map\",all_map)\r\n          // sum over resources\r\n          for ( let [k,v] of resource_map.entries() ) {\r\n            if ( k.startsWith(\"uta\") ) {\r\n              continue;\r\n            } else if ( k.startsWith(\"utw\") ) {\r\n              continue;\r\n            } else {\r\n              //let x = obj_to_map(JSON.parse(v));\r\n              let x = obj_to_map(v);\r\n              let y = obj_to_map(x.get('wordFrequency'));\r\n              for ( let [m,n] of y.entries() ) {\r\n                let z = all_map.get(m);\r\n                if ( z === undefined ) z = 0;\r\n                all_map.set(m, z + n);\r\n                if ( k.startsWith(\"ult\") ) {\r\n                  ult_total = ult_total + n;\r\n                } else if ( k.startsWith(\"ust\") ) {\r\n                  ust_total = ust_total + n;\r\n                } else if ( k.startsWith(\"utn\") ) {\r\n                  utn_total = utn_total + n;\r\n                } else if ( k.startsWith(\"utq\") ) {\r\n                  utq_total = utq_total + n;\r\n                } else if ( k.startsWith(\"obs\") ) {\r\n                  obs_total = obs_total + n;\r\n                } else {\r\n                  console.log(\"Unknown resource type:\", k);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          let totalPackcageWordCount = 0;\r\n          for ( let c of all_map.values() ) {\r\n            totalPackcageWordCount = totalPackcageWordCount + c;\r\n          }\r\n        \r\n          let wf = wc.map_to_obj(all_map);\r\n          let mt = wc.wf_to_mt(wf);\r\n          // ult,ust,utn,utq,utw,uta\r\n\r\n          let rootTitle = 'Book Packages Total Word Count: '+ totalPackcageWordCount.toLocaleString();\r\n          let bodyTitle = 'Details'\r\n    //                    <Typography variant=\"h5\" >{cav.bookTitleById(skey)}</Typography>\r\n\r\n          setVal(\r\n            <Paper>\r\n              <TreeView\r\n                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                defaultExpandIcon={<ChevronRightIcon />}\r\n                defaultExpanded={['1','2']}\r\n              >\r\n                <TreeItem nodeId=\"1\" label={<Typography variant=\"h5\">{rootTitle}</Typography>}>\r\n                  <TreeItem nodeId=\"2\" label={<Typography variant=\"h6\">Resource Subtotals for Selected Book Packages</Typography>}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <ul>\r\n                      <li>ULT <strong>{ult_total.toLocaleString()}</strong> </li>\r\n                      <li>UST <strong>{ust_total.toLocaleString()}</strong> </li>\r\n                      <li>UTA <strong>{uta_total.toLocaleString()}</strong> </li>\r\n                      <li>UTW <strong>{utw_total.toLocaleString()}</strong> </li>\r\n                      <li>UTN <strong>{utn_total.toLocaleString()}</strong> </li>\r\n                      <li>UTQ <strong>{utq_total.toLocaleString()}</strong> </li>\r\n                      <li>OBS <strong>{obs_total.toLocaleString()}</strong> </li>\r\n                      </ul>\r\n                    </Typography>\r\n                  </TreeItem>\r\n                  <TreeItem nodeId=\"3\" label={<Typography variant=\"h6\">{bodyTitle}</Typography>}>\r\n                    <MaterialTable\r\n                      icons={tableIcons}\r\n                      title={mt.title}\r\n                      columns={mt.columns}\r\n                      data={mt.data}\r\n                      options={mt.options}\r\n                    />\r\n                  </TreeItem>\r\n                </TreeItem>\r\n              </TreeView>\r\n            </Paper>\r\n          ); \r\n          return;\r\n        }\r\n        theLoop(iterations);   // Call the loop again, and pass it the current value of i\r\n      } else {\r\n        console.log(\"timeout on iter=\",iterations)\r\n        setVal(\"timeout\")\r\n      }\r\n    }, delay);\r\n  })(iterations);\r\n}\r\n\r\nfunction BookPackageTotals({\r\n  delay,\r\n  iterations,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_totals, setVal] = useState(<CircularProgress />);\r\n  let _delay = delay;\r\n  let _iterations = iterations;\r\n  if ( _delay === undefined ) _delay = 1000;\r\n  if ( _iterations === undefined ) _iterations = 1000;\r\n  useEffect( () => {\r\n    const fetchData = async () => {\r\n      await bp_totals(_delay,_iterations,setVal);\r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n  return (\r\n    <div className={classes.root}>\r\n      {_totals}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageTotals.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** milliseconds delay between iterations */\r\n  delay: PropTypes.number,\r\n  /** number of iterations before timing out */\r\n  iterations: PropTypes.number,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageTotals);\r\n\r\n\r\n","export {default} from './SinglePackageTotal';\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport * as tw from '../../core/timeout-watcher';\r\nimport {bpstore} from '../../core/setupBpDatabase';\r\n\r\n \r\n\r\n\r\nfunction SinglePackageTotal({\r\n  interval,\r\n  iterations,\r\n  bookId,\r\n  classes,\r\n  style,\r\n}) \r\n{\r\n  const [_total, setVal] = useState(<CircularProgress />);\r\n  let _interval = interval;\r\n  let _iterations = iterations;\r\n  if ( _interval === undefined ) _interval = 1000;\r\n  if ( _iterations === undefined ) _iterations = 1000;\r\n\r\n  const onIteration = async () => {\r\n    let resourcePrefixes = ['uta-','utw-','utq-','utn-','ult-','ust-','obs-'];\r\n    let obsResourePrefixes = ['uta-','utw-','utq-','utn-','obs-']\r\n    let total    = 0;\r\n    \r\n    for ( let ri = 0; ri < resourcePrefixes.length; ri++ ) {\r\n      if ( resourcePrefixes[ri] === 'obs-' ) {\r\n        if ( bookId !== 'obs' ) {\r\n          continue; // skip it, resource obs only has one book, namely obs\r\n        }\r\n      }\r\n      if ( bookId === 'obs' ) {\r\n        if ( resourcePrefixes[ri] === obsResourePrefixes[0] ||\r\n             resourcePrefixes[ri] === obsResourePrefixes[1] ||\r\n             resourcePrefixes[ri] === obsResourePrefixes[2] ||\r\n             resourcePrefixes[ri] === obsResourePrefixes[3] ||\r\n             resourcePrefixes[ri] === obsResourePrefixes[4]\r\n        ) {\r\n          // let it pass\r\n        } else {\r\n          continue; // skip it! obs only has the four resource types\r\n        }\r\n      }\r\n      let lsk = resourcePrefixes[ri]+bookId;\r\n      let x = await bpstore.getItem(lsk);\r\n      if ( x === null ) { \r\n        console.log(\"Missing:\", lsk);\r\n        return false; \r\n      }\r\n      console.log(\"Found:\", lsk)\r\n      total    = total    + (x.total    ? x.total    : x.grandTotalWordCount   );\r\n    }\r\n  \r\n    setVal(<span> Book Package Word Count: {total.toLocaleString()} </span>);\r\n    return true;\r\n  }\r\n  \r\n  const onTimeout = () => {\r\n    setVal(<span> TIMEOUT! </span>)\r\n  }\r\n\r\n  useEffect( () => {\r\n    const fetchData = async () => {\r\n      await tw.timeoutWatcher(_interval,_iterations,onIteration,onTimeout);\r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n  return (\r\n    <>{_total}</>\r\n  );\r\n};\r\n\r\nSinglePackageTotal.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** milliseconds delay between iterations */\r\n  interval: PropTypes.number,\r\n  /** number of iterations before timing out */\r\n  iterations: PropTypes.number,\r\n  /** The overriding CSS for this component */\r\n  style: PropTypes.object,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(SinglePackageTotal);\r\n\r\n\r\n","// this function will take 4 arguments:\r\n// - interval: how long to sleep between loops\r\n// - iterations: the maximum number of loops to do before timeout\r\n// - a function f() that returns a Boolean:\r\n//   - true means that what was being watched for is found and the looping can stop\r\n//   - false means to continue looping\r\n// - a function g() that returns void; on timeout this function is executed.\r\n\r\nexport async function timeoutWatcher(interval, iterations, f, g ) {\r\n  await (async function theLoop (iterations) {\r\n    setTimeout( \r\n      async function () {\r\n        if (--iterations) {      // If i > 0, keep going\r\n          let rc = await f();\r\n          if ( rc ) {\r\n            return;\r\n          }\r\n          theLoop(iterations);   // Call the loop again, and pass it the current value of i\r\n        } else {\r\n          g();\r\n        }\r\n      }, interval \r\n    );\r\n\r\n  })(iterations);\r\n\r\n}\r\n\r\nexport default timeoutWatcher;","export {default} from './BookPackageObs';\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nimport {fetchBookPackageObs} from './helpers';\r\nimport { forwardRef } from 'react';\r\n\r\nimport * as wc from 'uw-word-count';\r\n\r\n/* begin material box imports and icons */\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n/* end material box imports and icons */\r\n\r\n\r\nfunction BookPackageObs({\r\n  bookId,\r\n  clearFlag,\r\n  classes,\r\n}) \r\n{\r\n  const [_book, setVal] = useState(<CircularProgress />);\r\n  useEffect( () => {\r\n    if ( bookId !== 'obs' ) {\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Invalid Book \"{bookId.toUpperCase()}\" \r\n            expecting \"OBS\"\r\n          </Typography> \r\n        </Paper>\r\n      );\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      let result;\r\n      try {\r\n        result = await fetchBookPackageObs(\r\n          { bookId: bookId, clearFlag: clearFlag\r\n        });  \r\n      } catch (error) {\r\n        setVal(\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n        )\r\n        return;\r\n      }\r\n      let mt = wc.wf_to_mt(result.wordFrequency);\r\n      let totalWordCount = result.total;\r\n\r\n      let rootTitle = 'OBS Word Count: '+ totalWordCount.toLocaleString();\r\n      //let bodyTitle = 'Details'\r\n\r\n      setVal(\r\n        <Paper className={classes.paper} >\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n          >\r\n            <TreeItem nodeId=\"1\" label={rootTitle}>\r\n                <MaterialTable\r\n                  icons={tableIcons}\r\n                  title={mt.title}\r\n                  columns={mt.columns}\r\n                  data={mt.data}\r\n                  options={mt.options}\r\n                />\r\n            </TreeItem>\r\n          </TreeView>\r\n        </Paper>\r\n      );  \r\n    };\r\n    fetchData();\r\n  }, []); \r\n  // the parameter [] allows the effect to skip if value unchanged\r\n  // an empty [] will only update on mount of component\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {_book}\r\n    </div>\r\n  );\r\n};\r\n\r\nBookPackageObs.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object,\r\n  /** The Book ID to package. */\r\n  bookId: PropTypes.string.isRequired,\r\n  /** Flag to clear the database and refresh data */\r\n  clearFlag: PropTypes.bool,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(BookPackageObs);","import * as gitApi from '../../../core/gitApi';\r\nimport * as wc from 'uw-word-count';\r\nimport {bpstore} from '../../../core/setupBpDatabase';\r\n\r\nexport async function fetchBookPackageObs({bookId,clearFlag}) {\r\n    let dbkey = 'obs-'+bookId;\r\n\r\n    if ( clearFlag === undefined ) { clearFlag = true }\r\n\r\n    if ( clearFlag ) {\r\n        await bpstore.removeItem(dbkey);\r\n    } else { \r\n        // use the data already present\r\n        let x = await bpstore.getItem(dbkey);\r\n        if ( x !== null ) {\r\n            return x;\r\n        }\r\n    }\r\n\r\n    let errors = [];\r\n    let allContent = \"\";\r\n\r\n    // fetch the back/intro.md file \r\n    let uri = 'https://git.door43.org/unfoldingWord/en_obs/raw/branch/master/content/back/intro.md';\r\n    let _content;\r\n    try {\r\n        _content = await gitApi.getURL({uri});    \r\n    } catch(error) {\r\n        const err = \"OBS Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        throw new Error(err);\r\n    }\r\n    allContent = allContent + _content;\r\n\r\n    // fetch the front/intro.md file \r\n    uri = 'https://git.door43.org/unfoldingWord/en_obs/raw/branch/master/content/front/intro.md';\r\n    try {\r\n        _content = await gitApi.getURL({uri});    \r\n    } catch(error) {\r\n        const err = \"OBS Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        throw new Error(err);\r\n    }\r\n    allContent = allContent + _content;\r\n\r\n    // fetch the front/title.md file \r\n    uri = 'https://git.door43.org/unfoldingWord/en_obs/raw/branch/master/content/front/title.md';\r\n    try {\r\n        _content = await gitApi.getURL({uri});    \r\n    } catch(error) {\r\n        const err = \"OBS Error on:\"+uri+\" is:\"+error;\r\n        errors.push(err);\r\n        console.log(err);\r\n        throw new Error(err);\r\n    }\r\n    allContent = allContent + _content;\r\n\r\n    const fiftyChapters = [\r\n        '01','02','03','04','05','06','07','08','09','10',\r\n        '11','12','13','14','15','16','17','18','19','20',\r\n        '21','22','23','24','25','26','27','28','29','30',\r\n        '31','32','33','34','35','36','37','38','39','40',\r\n        '41','42','43','44','45','46','47','48','49','50',\r\n    ];\r\n\r\n    for ( let i=0; i<fiftyChapters.length; i++) {\r\n        // fetch the front/title.md file \r\n        uri = 'https://git.door43.org/unfoldingWord/en_obs/raw/branch/master/content/'+fiftyChapters[i]+'.md';\r\n        try {\r\n            _content = await gitApi.getURL({uri});    \r\n        } catch(error) {\r\n            const err = \"OBS Error on:\"+uri+\" is:\"+error;\r\n            errors.push(err);\r\n            console.log(err);\r\n            throw new Error(err);\r\n        }\r\n        allContent = allContent + _content;\r\n    }\r\n\r\n    let wcounts = wc.wordCount(allContent, 'markdown'); // markdown is default format\r\n\r\n    let results = {};\r\n\r\n    results.total    = wcounts.total;\r\n    results.grandTotalWordCount    = wcounts.total;\r\n    results.grandDistinctWordCount = wcounts.distinct;\r\n    results.wordFrequency = wcounts.wordFrequency;\r\n\r\n    await bpstore.setItem(dbkey,results);\r\n    if ( errors.length > 0 ) {\r\n        await bpstore.setItem(dbkey+\"-errors\", errors);\r\n    }\r\n    return results;\r\n}\r\n","export * from './chaptersAndVerses';\r\nexport * from './setupBpDatabase';\r\n","import data from './books.json';\r\nimport * as opt from './optimize'\r\n\r\nexport interface bookDataIF {\r\n  \"id\": string;\r\n  \"title\": string;\r\n  \"usfm\": string;\r\n  \"testament\": string;\r\n  \"verseCount\": number;\r\n  \"chapters\": number[];\r\n}\r\n\r\nexport const chaptersInBook = (bookId: string) => {\r\n    let chapters: number[];\r\n    chapters = bookData(bookId).chapters;\r\n    if ( chapters === undefined ) {\r\n      throw new Error(\"Error: chaptersInBook(): Invalid bookId\");\r\n    }\r\n    return chapters;\r\n};\r\n\r\nexport const versesInChapter = (bookId: string, chapter: number) => {\r\n  const verses = chaptersInBook(bookId)[chapter - 1];\r\n  return verses;\r\n};\r\n\r\nexport const bookData = (bookId: string) => {\r\n  const _bookData: bookDataIF = data.filter(row => row.id === bookId)[0];\r\n  return _bookData;\r\n};\r\n\r\nexport const testament = (bookId: string) => {\r\n  const _testament = bookData(bookId).testament;\r\n  return _testament;\r\n};\r\n\r\nexport const newTestament = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].testament === \"new\" ) {\r\n      list.push( data[i].title )\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const oldTestament = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].testament === \"old\" ) {\r\n      list.push( data[i].title )\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const bookDataTitles = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n      list.push( data[i].title )\r\n  }\r\n  // add OBS as a pseudobook\r\n  list.push('Open Bible Stories');\r\n  return list;\r\n}\r\n\r\nexport const titlesToBoolean = () => {\r\n  let ob: opt.bpStateIF = {};\r\n  let list = bookDataTitles();\r\n  list.forEach((v,k) => {ob[v]= [false,false]});\r\n  return ob;\r\n}\r\n\r\nexport const bookIdByTitle = (title: string) => {\r\n  if ( title === 'Open Bible Stories' ) return 'obs';\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].title === title ) {\r\n      return data[i].id;\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const bookTitleById = (id: string) => {\r\n  if ( id === 'obs' ) return 'Open Bible Stories';\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].id === id ) {\r\n      return data[i].title;\r\n    }\r\n  }\r\n  return \"\";\r\n}","// CSV Package\r\n\r\n\r\nexport function addRow( csvdata: string[][], csvrow: string[]) {\r\n    // Rules below are a relaxed version of \r\n    // https://tools.ietf.org/html/rfc4180 \r\n    // Specifically, no checks are made to ensure that all rows\r\n    // have the same number of columns.\r\n\r\n    // This function add a new row of strings to an existing 2D array.\r\n\r\n    // Rules:\r\n    // 1. if a cell contains a quote, then the quote must doubled (rfc4180#7)\r\n    // 2. if a cell contains commas, quotes, or line breaks, then the string must quoted (rfc4180#6)\r\n    //    a line break will mean a carriage return (CR) or line feed (LF)\r\n\r\n    for (let i=0; i < csvrow.length; i++) {\r\n        let cell = csvrow[i];\r\n        if (cell === undefined || cell === null) cell = \"\";\r\n        if ( cell.startsWith('\"') && cell.endsWith('\"') ) {\r\n            // remove the quotes\r\n            cell = cell.substring(1, cell.length-1);\r\n        }\r\n        if ( cell.includes('\"') ) {\r\n            // double the quotes\r\n            cell = cell.replace(/\"/g,'\"\"');\r\n        }\r\n        if ( cell.includes('\"') ) {\r\n            cell = '\"' + cell + '\"';\r\n        } else if ( cell.includes('\\n') ) {\r\n            cell = '\"' + cell + '\"';\r\n        } else if ( cell.includes('\\r') ) {\r\n            cell = '\"' + cell + '\"';\r\n        } else if ( cell.includes(',') ) {\r\n            cell = '\"' + cell + '\"';\r\n        }\r\n        // replace value\r\n        csvrow[i] = cell;\r\n    }\r\n    // push new row onto csv data\r\n    csvdata.push(csvrow);\r\n}\r\n\r\nexport function toCSV( csvdata: string[][] ) : string {\r\n    // Rules below are a relaxed version of \r\n    // https://tools.ietf.org/html/rfc4180 \r\n    // Specifically, no checks are made to ensure that all rows\r\n    // have the same number of columns.\r\n\r\n    // This function combines all the rows into a single string\r\n    // suitable for downloading or importing into a spreadsheet\r\n\r\n    // Rules:\r\n    // 1. join cells in a row with a comma (rfc4180#4); \r\n    //    no comma after last cell\r\n    // 2. join rows with a \\r\\n (CRLF) (rfc4180#1)\r\n    //    use CRLF after last row\r\n\r\n\r\n    let data = \"\";\r\n\r\n    for ( let i=0; i < csvdata.length; i++ ) {\r\n        let row = csvdata[i];\r\n        data = data + row.join(',') + '\\r\\n';\r\n    }\r\n    return data;\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from '@material-ui/core';\r\n\r\nimport * as dbsetup from 'book-package-rcl';\r\nimport * as books from './books';\r\nimport * as csv from './csvMaker';\r\n\r\n\r\nexport interface bpStateIF { [x: string]: boolean[]; };\r\ninterface ObjectLiteral {\r\n    [key: string]: any;\r\n} \r\n\r\n  \r\nconst resourcePrefixes = ['uta-', 'utw-', 'ult-','ust-', 'utq-', 'utn-', 'obs-']\r\n\r\nfunction convertUtaToLink(lnk: string) {\r\n    const path = 'https://git.door43.org/unfoldingWord/en_ta/src/branch/master/translate/';\r\n    return path+lnk;\r\n}\r\n\r\nexport function convertUtwToLink(lnk: string) {\r\n    const path = 'https://git.door43.org/unfoldingWord/en_tw/src/branch/master';\r\n    let s;\r\n    s = lnk;\r\n    s = s.replace(/^rc.*dict(\\/.*$)/, path+'$1.md');\r\n    return s;\r\n}\r\n\r\n\r\nexport async function optimize(state: bpStateIF, setOpt: React.Dispatch<React.SetStateAction<JSX.Element>> ) {\r\n\r\n    setOpt(<CircularProgress/>);\r\n    // extract the books in the package\r\n    const allbooks = Object.keys(state);\r\n    // extract the book package\r\n    const bookpkg    = allbooks.filter( function(book) { return state[book][0] } );\r\n    console.log(\"bookpkg:\",bookpkg);\r\n    // extract the books that are done/completed first (if any)\r\n    const booksDone  = bookpkg.filter( function(book) { return state[book][1] } );\r\n    console.log(\"booksDone:\",booksDone);\r\n    // books to be optimized\r\n    const booksOpt   = bookpkg.filter( function(book) { return !booksDone.includes(book) } );\r\n    console.log(\"booksOpt:\",booksOpt);\r\n\r\n    // In case the user wants to export the optimized flow to a spreadsheet (CSV)\r\n    // the data is collected during the optimization. Don't want to do the \r\n    // optimization twice!!\r\n    // Therefore, collect it and store in indexedDB\r\n    let csvdata: string[][] = [];\r\n    // add export headers for completed packages section\r\n    //csv.addRow(csvdata, ['All Packages']);\r\n\r\n    // keep track of the word counts for each article uta or utw\r\n    let articleCount = new Map<string,number>();\r\n\r\n    // count words in each book for pre-optimization summary\r\n    let bookCountTotalsPreOpt = new Map<string,number>();\r\n    let bookCountArticleTotalsPreOpt = new Map<string,number>();\r\n    let bklist: string[] = [];\r\n    // add export headers for completed book packages\r\n    //csv.addRow(csvdata,['Book', 'Id', 'Resource', 'Word Count', 'Title']);\r\n    for (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n        bklist.push(bkid);\r\n        for (let res of resourcePrefixes) {\r\n            if ( bkid === 'obs' ) {\r\n                if (res === 'uta-' || res === 'ult-' || res === 'ust-' ) {\r\n                    continue; // these resources are not present for OBS\r\n                }\r\n            }\r\n            if ( res === 'obs-' ) {\r\n                // if resource is obs, then the only \"book\" is (also) obs\r\n                if ( bkid !== 'obs' ) continue;\r\n            }\r\n            let dbkey = res+bkid;\r\n            let data = await dbsetup.bpstore.getItem(dbkey);\r\n            let rescount = data.total;\r\n            if ( rescount === undefined ) {\r\n                rescount = data.grandTotalWordCount\r\n                // add to article count (deduped)\r\n                if ( bookCountArticleTotalsPreOpt.has(bkid) ) {\r\n                    bookCountArticleTotalsPreOpt.set(bkid, bookCountArticleTotalsPreOpt.get(bkid) + rescount);\r\n                } else {\r\n                    bookCountArticleTotalsPreOpt.set(bkid,rescount)\r\n                }\r\n            };\r\n            if ( bookCountTotalsPreOpt.has(bkid) ) {\r\n                bookCountTotalsPreOpt.set(bkid, bookCountTotalsPreOpt.get(bkid) + rescount);\r\n            } else {\r\n                bookCountTotalsPreOpt.set(bkid,rescount);\r\n            }\r\n            // get the detailed article map and store counts for later\r\n            if ( res === 'uta-' || res === 'utw-' ) {\r\n                const allArticles = Object.keys(data.detail_article_map);\r\n                for (let articlename of allArticles) {\r\n                    if ( ! articleCount.has(articlename) ) {\r\n                        let articleWordCount = data.detail_article_map[articlename].total;\r\n                        articleCount.set(articlename, articleWordCount );\r\n                        //csv.addRow(csvdata,[bk, bkid, res.slice(0, -1), articleWordCount.toLocaleString(), articlename]);\r\n                    }\r\n                }\r\n            } else {\r\n                //csv.addRow(csvdata, [bk, bkid, res.slice(0, -1), rescount.toLocaleString()]);\r\n            }\r\n        }    \r\n    }\r\n    console.log(\"Pre-optimization computations done\");\r\n\r\n    /*\r\n        For the books marked as done, compute their word count contribution by:\r\n        a. create a deduped list of all articles (UTA and UTW) with their counts\r\n        b. compute the grand total of the articles\r\n        c. Add to that the total word counts for UTQ, UTN, ULT, and UST\r\n        d. This sum total will be the starting point for the book package flow.\r\n    */\r\n    //csv.addRow(csvdata, [\"\"]);\r\n    csv.addRow(csvdata, ['Completed Packages']);\r\n    csv.addRow(csvdata,['Book','BookId','Resource','Word Count','Title'])\r\n\r\n    let doneGrandTotal = 0;\r\n    let utaGrandTotal = 0;\r\n    let utwGrandTotal = 0;\r\n    let doneArticleMap = new Map<string,number>();\r\n    for (let i=0; i < booksDone.length; i++) {\r\n        let bkid = books.bookIdByTitle(booksDone[i]);\r\n\r\n        // get the UTW articles and their counts\r\n        let dbkey = \"utw-\"+bkid;\r\n        let data = await dbsetup.bpstore.getItem(dbkey);\r\n        let dam = data.detail_article_map;\r\n        let articles = Object.keys(dam);\r\n        for (let j=0; j< articles.length; j++) {\r\n            let articleCount = dam[articles[j]].total;\r\n            // now add to map. dups expected\r\n            if ( ! doneArticleMap.has(articles[j])) {\r\n                doneArticleMap.set(articles[j], articleCount);\r\n                csv.addRow(csvdata,[booksDone[i], bkid, 'utw', articleCount.toLocaleString(), articles[j]])\r\n                utwGrandTotal = utwGrandTotal + articleCount;\r\n            }\r\n        }\r\n\r\n        // get the UTA articles and their counts\r\n        if ( bkid === 'obs' ) continue; // not used in OBS\r\n        dbkey = \"uta-\"+bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        dam = data.detail_article_map;\r\n        articles = Object.keys(dam);\r\n        for (let j=0; j< articles.length; j++) {\r\n            let articleCount = dam[articles[j]].total;\r\n            // now add to map. dups expected\r\n            if ( ! doneArticleMap.has(articles[j])) {\r\n                doneArticleMap.set(articles[j], articleCount);\r\n                csv.addRow(csvdata,[booksDone[i], bkid, 'uta', articleCount.toLocaleString(), articles[j]]);\r\n                utaGrandTotal = utaGrandTotal + articleCount;\r\n            }\r\n        }\r\n    }\r\n\r\n    // add up the article contributions\r\n    for ( let c of doneArticleMap.values() ) {\r\n        doneGrandTotal = doneGrandTotal + c;\r\n    }\r\n    console.log(\"done article total is:\", doneGrandTotal);\r\n    // now add in the UTQ, UTN, ULT, UST for each completed book\r\n    for (let i=0; i < booksDone.length; i++) {\r\n        // get the UTA articles and their counts\r\n        let bkid = books.bookIdByTitle(booksDone[i]);\r\n        let dbkey = \"utq-\"+bkid;\r\n        let data  = await dbsetup.bpstore.getItem(dbkey);\r\n        let resourceTotal = data.total;\r\n        csv.addRow(csvdata,[booksDone[i],bkid,'utq',resourceTotal.toLocaleString()])\r\n        doneGrandTotal = doneGrandTotal + resourceTotal;\r\n        dbkey = \"utn-\"+bkid;\r\n        data  = await dbsetup.bpstore.getItem(dbkey);\r\n        resourceTotal = data.total;\r\n        csv.addRow(csvdata,[booksDone[i],bkid,'utn',resourceTotal.toLocaleString()])\r\n        doneGrandTotal = doneGrandTotal + resourceTotal;\r\n        if ( bkid !== 'obs') {\r\n            dbkey = \"ult-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            resourceTotal = data.total;\r\n            csv.addRow(csvdata,[booksDone[i],bkid,'ult',resourceTotal.toLocaleString()])\r\n            doneGrandTotal = doneGrandTotal + resourceTotal;\r\n            dbkey = \"ust-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            resourceTotal = data.total;\r\n            csv.addRow(csvdata,[booksDone[i],bkid,'ust',resourceTotal.toLocaleString()])\r\n            doneGrandTotal = doneGrandTotal + resourceTotal;\r\n        }\r\n    }\r\n    console.log(\"Done grand total is:\", doneGrandTotal);\r\n    if ( doneGrandTotal === 0 ) {\r\n        csv.addRow(csvdata, ['None specified'])\r\n    } else {\r\n        csv.addRow(csvdata, [\"\"]);\r\n        csv.addRow(csvdata, ['UTA Grand Total:', utaGrandTotal.toLocaleString()]);\r\n        csv.addRow(csvdata, ['UTW Grand Total:', utwGrandTotal.toLocaleString()]);\r\n        csv.addRow(csvdata, ['Grand Total of Articles', (utaGrandTotal+utwGrandTotal).toLocaleString()])\r\n        csv.addRow(csvdata,['Grand Total:',doneGrandTotal.toLocaleString()]);\r\n    }\r\n\r\n    /*\r\n        The above marks the end of the computation of the books \r\n        marked as done.\r\n    */\r\n   \r\n\r\n    /*\r\n        This is the loop that computes the optimized path.\r\n        Given that there are n books to optimize, then the \r\n        loop only needs to be done n-1 times. At that point, \r\n        only one book is left and it will be the last one.\r\n\r\n        The inner loop will loop thru all the remaining \r\n        books to determine which should be next. This is done\r\n        by computing word counts of all the resources\r\n        associated to the book, but excluding any articles \r\n        (i.e., UTA and UTW) that have already been done.\r\n\r\n        The inner loop will be executed one less each time,\r\n        since the winning book in each round will be removed\r\n        from the array of books to be optimized. In the last\r\n        round, there will be two books left to do.\r\n\r\n    */\r\n    interface ObjectLiteral {\r\n        [key: string]: any;\r\n    }    \r\n    let round:number = 0;\r\n    let optBooks: string[] = [];\r\n    let optCounts: number[] = [];\r\n    let optUtaMap = new Map<string,string[]>();\r\n    let optUtwMap = new Map<string,string[]>();\r\n    let refmapUta: ObjectLiteral = { };\r\n    let refmapUtw: ObjectLiteral = { };\r\n    \r\n\r\n    for (let n=0; n < booksOpt.length; n++ ) {\r\n        round++;\r\n        // blank row\r\n        csv.addRow(csvdata, [\"\"]);\r\n        csv.addRow(csvdata,['Round '+round]);\r\n        csv.addRow(csvdata,['Book', 'BookId', 'Resource', 'Word Count', 'Title']);\r\n        console.log(\"Begin round:\",round);\r\n        let newBooks: string[] = [];\r\n        let newCounts: number[] = [];\r\n        for (let i=0; i < booksOpt.length; i++) {\r\n            // skip winners from prior rounds\r\n            if ( optBooks.includes(booksOpt[i]) ) {\r\n                continue;\r\n            }\r\n            // The book for this round:\r\n            newBooks.push(booksOpt[i]);\r\n            // get the UTA articles and their counts\r\n            let articles: string[] = [];\r\n            let dbkey = \"\";\r\n            let data: ObjectLiteral = {};\r\n            let dam: ObjectLiteral = {};\r\n            let optArticleMap = new Map<string,number>();\r\n            let bkid = books.bookIdByTitle(booksOpt[i]);\r\n            if ( bkid !== 'obs' ) {\r\n                let dbkey = \"uta-\"+bkid;\r\n                let data = await dbsetup.bpstore.getItem(dbkey);\r\n                let dam = data.detail_article_map;\r\n                articles = Object.keys(dam);\r\n\r\n                // dedup the articles for this book\r\n                // using the article map below\r\n\r\n                for (let j=0; j< articles.length; j++) {\r\n                    // first check to see if this article is in the done list\r\n                    // if so skip it\r\n                    if ( doneArticleMap.has(articles[j]) ) { continue;}\r\n                    let articleCount = dam[articles[j]].total;\r\n                    // now add to map. dups expected\r\n                    optArticleMap.set(articles[j], articleCount);\r\n                    //console.log(articles[j], articleCount);\r\n                }\r\n            }\r\n\r\n            // get the UTW articles and their counts\r\n            dbkey = \"utw-\"+bkid;\r\n            data = await dbsetup.bpstore.getItem(dbkey);\r\n            dam = data.detail_article_map;\r\n            articles = Object.keys(dam);\r\n\r\n            for (let j=0; j< articles.length; j++) {\r\n                // first check to see if this article is in the done list\r\n                // if so skip it\r\n                if ( doneArticleMap.has(articles[j]) ) { continue;}\r\n                let articleCount = dam[articles[j]].total;\r\n                // now add to map\r\n                optArticleMap.set(articles[j], articleCount);\r\n                //console.log(articles[j], articleCount);\r\n            }\r\n\r\n            // add up the article contributions for this book\r\n            let optBookTotal: number = 0;\r\n            for ( let c of optArticleMap.values() ) {\r\n                optBookTotal = optBookTotal + c;\r\n            }\r\n            console.log(\"book article total is:\", booksOpt[i],optBookTotal );\r\n\r\n            // now add in the UTQ, UTN, ULT, UST for each completed book\r\n            dbkey = \"utq-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            optBookTotal = optBookTotal + data.total;\r\n            dbkey = \"utn-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            optBookTotal = optBookTotal + data.total;\r\n            if ( bkid === 'obs' ) {\r\n                dbkey = \"obs-\"+bkid;\r\n                data  = await dbsetup.bpstore.getItem(dbkey);\r\n                optBookTotal = optBookTotal + data.total;\r\n            } else {\r\n                dbkey = \"ult-\"+bkid;\r\n                data  = await dbsetup.bpstore.getItem(dbkey);\r\n                optBookTotal = optBookTotal + data.total;\r\n                dbkey = \"ust-\"+bkid;\r\n                data  = await dbsetup.bpstore.getItem(dbkey);\r\n                optBookTotal = optBookTotal + data.total;\r\n            }\r\n            newCounts.push(optBookTotal);\r\n            console.log(\"Book grand total is:\", booksOpt[i], optBookTotal);\r\n        }\r\n\r\n        /*\r\n            Now we decide which book has the least word count!\r\n        */\r\n        // initialize to the first one\r\n        let roundWinnerBook: string = newBooks[0]; \r\n        let roundWinnerCount: number = newCounts[0]; \r\n        for (let i=1; i < newBooks.length; i++) {\r\n            if (newCounts[i] < roundWinnerCount ) {\r\n                roundWinnerBook = newBooks[i];\r\n                roundWinnerCount = newCounts[i];\r\n            }\r\n        }\r\n        // record the winner\r\n        optBooks.push(roundWinnerBook);\r\n        optCounts.push(roundWinnerCount);\r\n        console.log(\"Round \", round, \"winner is \",roundWinnerBook, \" with count:\", roundWinnerCount);\r\n\r\n        // add round winner to optimized export data\r\n        // get the utq data for the winner\r\n        let bkid = books.bookIdByTitle(roundWinnerBook);\r\n        let dbkey = \"utq-\"+bkid;\r\n        let data  = await dbsetup.bpstore.getItem(dbkey);\r\n        csv.addRow(csvdata,[roundWinnerBook, bkid, 'utq', data.total.toLocaleString(), \"\"]);\r\n        \r\n        // get the utn data for the winner\r\n        bkid = books.bookIdByTitle(roundWinnerBook);\r\n        dbkey = \"utn-\"+bkid;\r\n        data  = await dbsetup.bpstore.getItem(dbkey);\r\n        csv.addRow(csvdata,[roundWinnerBook, bkid, 'utn', data.total.toLocaleString(), \"\"]);\r\n\r\n        // get the ult, ust data for the winner if not OBS\r\n        bkid = books.bookIdByTitle(roundWinnerBook);\r\n        if ( bkid === 'obs' ) {\r\n            dbkey = \"obs-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            csv.addRow(csvdata,[roundWinnerBook, bkid, 'obs', data.total.toLocaleString(), \"\"]);\r\n        } else {\r\n            dbkey = \"ult-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            csv.addRow(csvdata,[roundWinnerBook, bkid, 'ult', data.total.toLocaleString(), \"\"]);\r\n            dbkey = \"ust-\"+bkid;\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            csv.addRow(csvdata,[roundWinnerBook, bkid, 'ust', data.total.toLocaleString(), \"\"]);\r\n        }\r\n\r\n        /* ------------------------------------------------------------\r\n\r\n            Now add the winner's UTA and UTW articles to the done list\r\n            these will not be done again in subsequent rounds\r\n\r\n        */\r\n       let winnerUtaTotal = 0;\r\n       let winnerUtwTotal = 0;\r\n       if ( bkid !== 'obs' ) {\r\n            let dbkey = \"uta-\"+bkid;\r\n            let data = await dbsetup.bpstore.getItem(dbkey);\r\n            let dam = data.detail_article_map;\r\n            refmapUta = data.summary_ref_map;\r\n            let articles = Object.keys(dam);\r\n            let optUta: string[] = [];\r\n\r\n            for (let j=0; j< articles.length; j++) {\r\n                // first check to see if this article is in the done list\r\n                // if so skip it\r\n                if ( doneArticleMap.has(articles[j]) ) { continue;}\r\n                optUta.push(articles[j] );\r\n                let articleCount = dam[articles[j]].total;\r\n                // now add to map. dups expected\r\n                doneArticleMap.set(articles[j], articleCount);\r\n                csv.addRow(csvdata,[roundWinnerBook, bkid, 'uta', articleCount.toLocaleString(), articles[j]]);\r\n                winnerUtaTotal = winnerUtaTotal + articleCount;\r\n            }\r\n            optUtaMap.set(roundWinnerBook,optUta);\r\n        }\r\n\r\n        // get the UTW articles and their counts\r\n        dbkey = \"utw-\"+bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        let dam = data.detail_article_map;\r\n        refmapUtw = data.summary_ref_map;\r\n        let articles = Object.keys(dam);\r\n        let optUtw: string[] = [];\r\n\r\n        for (let j=0; j< articles.length; j++) {\r\n            // first check to see if this article is in the done list\r\n            // if so skip it\r\n            if ( doneArticleMap.has(articles[j]) ) { continue;}\r\n            optUtw.push(articles[j] );\r\n            let articleCount = dam[articles[j]].total;\r\n            // now add to map\r\n            doneArticleMap.set(articles[j], articleCount);\r\n            csv.addRow(csvdata,[roundWinnerBook, bkid, 'utw', articleCount.toLocaleString(), articles[j]]);\r\n            winnerUtwTotal = winnerUtwTotal + articleCount;\r\n        }\r\n        optUtwMap.set(roundWinnerBook,optUtw);\r\n        // blank row to csv and show uta and utw total for round\r\n        csv.addRow(csvdata,['']);\r\n        // total for uta to csv\r\n        csv.addRow(csvdata,['Round '+round+' UTA:', winnerUtaTotal.toLocaleString()])\r\n        // total for utw to csv\r\n        csv.addRow(csvdata,['Round '+round+' UTW:', winnerUtwTotal.toLocaleString()])\r\n        // Round x total\r\n        csv.addRow(csvdata,['Round '+round+' Total:', roundWinnerCount.toLocaleString()])\r\n    }\r\n    await dbsetup.bpstore.setItem('optimized-csv-data',csv.toCSV(csvdata));\r\n    setOpt (\r\n        <div>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <Typography >\r\n                If these book packages are completed:\r\n                </Typography>\r\n                </div>\r\n                <div>\r\n                <ul>\r\n                {booksDone.map(t => (\r\n                    <li>\r\n                        <Typography key={t}>\r\n                            {t} (Book Package Word Count: {bookCountTotalsPreOpt.get(books.bookIdByTitle(t))?.toLocaleString()})\r\n                        </Typography>\r\n                    </li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <Typography >\r\n                Then proceed in this order:\r\n                </Typography>\r\n                <div>\r\n\r\n                <ol>\r\n                {optBooks.map( (t,i) => (\r\n                    <li>\r\n                        <Typography key={t}>\r\n                        {t} - Adjusted Book Package Word Count: {optCounts[i].toLocaleString()}\r\n                        </Typography>\r\n                        <TreeView\r\n                            defaultCollapseIcon={<ExpandMoreIcon />}\r\n                            defaultExpandIcon={<ChevronRightIcon />}\r\n                        >\r\n                            <TreeItem nodeId=\"1\" label='Unique UTA modules'>\r\n                                <ul>\r\n                                {optUtaMap.get(t)?.map( uta => ( \r\n                                    <li>\r\n                                        <Typography>\r\n                                            <Link href={convertUtaToLink(uta)} target=\"_blank\" rel=\"noopener\" >\r\n                                            {uta}\r\n                                            </Link>\r\n                                            &nbsp;&nbsp;(Word Count: {articleCount.get(uta)})\r\n                                            &nbsp;&nbsp;(References: {refmapUta[uta]})\r\n                                        </Typography>                    \r\n                                    </li>\r\n                                ))}\r\n                                </ul>\r\n                            </TreeItem>\r\n                        </TreeView>\r\n\r\n                        <TreeView\r\n                            defaultCollapseIcon={<ExpandMoreIcon />}\r\n                            defaultExpandIcon={<ChevronRightIcon />}\r\n                        >\r\n                            <TreeItem nodeId=\"1\" label='Unique UTW modules'>\r\n                                <ul>\r\n                                {optUtwMap.get(t)?.map( utw => ( \r\n                                    <li>\r\n                                    <Typography>\r\n                                        <Link href={convertUtwToLink(utw)} target=\"_blank\" rel=\"noopener\" >\r\n                                        {utw} \r\n                                        </Link>\r\n                                        &nbsp;&nbsp;(Word Count: {articleCount.get(utw)})\r\n                                        &nbsp;&nbsp;(References: {refmapUtw[utw]})\r\n                                    </Typography>                    \r\n                                    </li>\r\n                                ))}\r\n                                </ul>\r\n                                </TreeItem>\r\n                        </TreeView>\r\n\r\n                    </li>\r\n                ) )}\r\n                </ol>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import * as dbsetup from 'book-package-rcl';\r\nimport * as books from './books';\r\nimport * as csv from './csvMaker';\r\n\r\n\r\nexport interface bpStateIF { [x: string]: boolean[]; };\r\nexport interface csvDataIF { [x: string]: string; };\r\n  \r\nconst resourcePrefixes = ['uta-', 'utw-', 'ult-','ust-', 'utq-', 'utn-', 'obs-']\r\n\r\nexport async function exportBookPackage( state: bpStateIF ): Promise<any> {\r\n    // extract the books in the package\r\n    const allbooks = Object.keys(state);\r\n    // extract the book package\r\n    const bookpkg    = allbooks.filter( function(book) { return state[book][0] } );\r\n    let csvdata: string[][] = [];\r\n\r\n    // count words in each book for summary\r\n    let bookCountTotals = new Map<string,number>();\r\n    let bookCountArticleTotals = new Map<string,number>();\r\n    let bklist: string[] = [];\r\n    for (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n        bklist.push(bkid);\r\n        for (let res of resourcePrefixes) {\r\n            let dbkey = res+bkid;\r\n            let data = await dbsetup.bpstore.getItem(dbkey);\r\n            if ( data === null ) continue; // skip missing data\r\n            let rescount = data.total;\r\n            if ( rescount === undefined ) {\r\n                rescount = data.grandTotalWordCount\r\n                // add to article count (deduped)\r\n                if ( bookCountArticleTotals.has(bkid) ) {\r\n                    bookCountArticleTotals.set(bkid, bookCountArticleTotals.get(bkid) + rescount);\r\n                } else {\r\n                    bookCountArticleTotals.set(bkid,rescount)\r\n                }\r\n            };\r\n            if ( bookCountTotals.has(bkid) ) {\r\n                bookCountTotals.set(bkid, bookCountTotals.get(bkid) + rescount);\r\n            } else {\r\n                bookCountTotals.set(bkid,rescount);\r\n            }\r\n        }    \r\n    }\r\n\r\n    // Add summary to csv data\r\n    let row: string[] = ['Book Package Summary'];\r\n    csv.addRow(csvdata,row);\r\n\r\n    row = ['Book','Word Count'];\r\n    csv.addRow(csvdata,row);\r\n\r\n    let grandTotal = 0;\r\n    for ( let [k,v] of bookCountTotals.entries() ) {\r\n        grandTotal = grandTotal + v;\r\n        let n: string = \"\" + v.toLocaleString();\r\n        row = [books.bookTitleById(k),n];\r\n        csv.addRow(csvdata,row);\r\n    }\r\n\r\n    // Add empty row\r\n    csv.addRow(csvdata,[''])\r\n\r\n    // Add details to csv data\r\n    // use holding table so summary data comes first\r\n    let csvdetails: string[][] = [];\r\n\r\n    row = ['Book Package Details']\r\n    csv.addRow(csvdetails,row);\r\n\r\n    row = ['Resource Type','Book','Word Count']\r\n    csv.addRow(csvdetails,row);\r\n\r\n    // get the UTQ, UTN, ULT, UST for each book\r\n    let utqTotal = 0;\r\n    let utnTotal = 0;\r\n    let obsTotal = 0;\r\n    let ultTotal = 0;\r\n    let ustTotal = 0;\r\n    for (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n\r\n        let dbkey = \"utq-\"+bkid;\r\n        let data  = await dbsetup.bpstore.getItem(dbkey);\r\n        row = ['UTQ',bk,data.total.toLocaleString()];\r\n        csv.addRow(csvdetails,row);\r\n        utqTotal = utqTotal + data.total;\r\n\r\n        dbkey = \"utn-\"+bkid;\r\n        data  = await dbsetup.bpstore.getItem(dbkey);\r\n        row = ['UTN',bk,data.total.toLocaleString()];\r\n        csv.addRow(csvdetails,row);\r\n        utnTotal = utnTotal + data.total;\r\n\r\n        // skip OBS -- they don't have ult/ust\r\n        if ( bkid === 'obs' ) {\r\n            dbkey = \"obs-obs\";\r\n            data  = await dbsetup.bpstore.getItem(dbkey);\r\n            row = ['OBS',bk,data.total.toLocaleString()];\r\n            csv.addRow(csvdetails,row);\r\n            obsTotal = obsTotal + data.total;\r\n            continue; // skip ULT and UST for OBS\r\n        }\r\n\r\n        dbkey = \"ult-\"+bkid;\r\n        data  = await dbsetup.bpstore.getItem(dbkey);\r\n        row = ['ULT',bk,data.total.toLocaleString()];\r\n        csv.addRow(csvdetails,row);\r\n        ultTotal = ultTotal + data.total;\r\n\r\n        dbkey = \"ust-\"+bkid;\r\n        data  = await dbsetup.bpstore.getItem(dbkey);\r\n        row = ['UST',bk,data.total.toLocaleString()];\r\n        csv.addRow(csvdetails,row);\r\n        ustTotal = ustTotal + data.total;\r\n    }\r\n\r\n    // Add empty row\r\n    csv.addRow(csvdetails,[''])\r\n\r\n    row = ['Resource Type','Book','Article','Word Count']\r\n    csv.addRow(csvdetails,row);\r\n\r\n    // get the UTA and UTW for book package\r\n    let utaTotal = 0;\r\n    let utwTotal = 0;\r\n    let utaTracker: string[] = [];\r\n    let utwTracker: string[] = [];\r\n    for (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n\r\n        // get the UTW articles and their counts\r\n        let dbkey = \"utw-\"+bkid;\r\n        let data = await dbsetup.bpstore.getItem(dbkey);\r\n        let dam = data.detail_article_map;\r\n        let articles = Object.keys(dam);\r\n        for (let j=0; j< articles.length; j++) {\r\n            let articleCount = dam[articles[j]].total;\r\n            row = ['UTW',bk,articles[j],\"\"+articleCount.toLocaleString()];\r\n            csv.addRow(csvdetails,row);\r\n            if ( ! utwTracker.includes(articles[j]) ) {\r\n                utwTotal = utwTotal + articleCount;\r\n                utwTracker.push(articles[j]);\r\n            }\r\n        }\r\n\r\n        // skip if OBS\r\n        if ( bkid === 'obs' ) continue;\r\n\r\n        dbkey = \"uta-\"+bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        dam = data.detail_article_map;\r\n        articles = Object.keys(dam);\r\n        for (let j=0; j< articles.length; j++) {\r\n            let articleCount = dam[articles[j]].total;\r\n            row = ['UTA',bk,articles[j],\"\"+articleCount.toLocaleString()];\r\n            csv.addRow(csvdetails,row);\r\n            if ( ! utaTracker.includes(articles[j]) ) {\r\n                utaTotal = utaTotal + articleCount;\r\n                utaTracker.push(articles[j]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Add empty row\r\n    csv.addRow(csvdetails,[''])\r\n\r\n    // Get list of errors, if any\r\n    row = ['Book Package Errors']\r\n    csv.addRow(csvdetails,row);\r\n\r\n    const sufkey = '-errors';\r\n    for (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n        for (let res of resourcePrefixes) {\r\n            let dbkey = res+bkid+sufkey;\r\n            let data: string[]  = await dbsetup.bpstore.getItem(dbkey);\r\n            if ( data === null ) { continue }\r\n            let dedupList: string[] = [...new Set(data)]\r\n            for ( let i=0; i < dedupList.length; i++ ) {\r\n                row = [dedupList[i]]\r\n                csv.addRow(csvdetails,row);\r\n            }\r\n        }\r\n    }\r\n\r\n    // now add summary data by resource types\r\n    csv.addRow(csvdata, ['Resource Subtotals'])\r\n    csv.addRow(csvdata, ['ULT',ultTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['UST',ustTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['UTA',utaTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['UTW',utwTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['UTN',utnTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['UTQ',utqTotal.toLocaleString()])\r\n    csv.addRow(csvdata, ['OBS',obsTotal.toLocaleString()])\r\n    // Add empty row\r\n    csv.addRow(csvdata,[''])\r\n\r\n    // now add the details\r\n    for ( let i=0; i < csvdetails.length; i++ ) {\r\n        csv.addRow(csvdata, csvdetails[i]);\r\n    }\r\n\r\n    // Download the CSV data\r\n    // -- first, convert 2d array to CSV string\r\n    let csvDownload = csv.toCSV(csvdata);\r\n    return csvDownload;\r\n\r\n\r\n}\r\n","import * as dbsetup from 'book-package-rcl';\r\nimport * as books from './books';\r\nimport * as csv from './csvMaker';\r\n\r\n/*\r\n    This export is per issue 15. The columns needed are:\r\n    book,ult,ust,utn,utq,utw,uta\r\n\r\n    where book is the id and the values are the (total) count\r\n    per the resource type.\r\n\r\n*/\r\n\r\nexport interface bpStateIF { [x: string]: boolean[]; };\r\nexport interface csvDataIF { [x: string]: string; };\r\n  \r\nexport async function exportCounts( state: bpStateIF ): Promise<any> {\r\n    // extract the books in the package\r\n    const allbooks = Object.keys(state);\r\n    // extract the book package\r\n    const bookpkg = allbooks.filter( function(book) { return state[book][0] } );\r\n    console.log(\"bookpkg:\",bookpkg);\r\n    let csvdata: string[][] = [];\r\n    let row = ['book','ult','ust','utn','utq','utw','uta'];\r\n    csv.addRow(csvdata,row);\r\n\r\n    let ult = \"\";\r\n    let ust = \"\";\r\n    let utn = \"\";\r\n    let utq = \"\";\r\n    let utw = \"\";\r\n    let uta = \"\";\r\nfor (let bk of bookpkg) {\r\n        let bkid = books.bookIdByTitle(bk);\r\n        // define vars for the columns vals\r\n\r\n        // get the count for the book resources\r\n        let dbkey = \"ult-\" + bkid;\r\n        let data = await dbsetup.bpstore.getItem(dbkey);\r\n        let rescount = data.total;\r\n        ult = rescount.toLocaleString();\r\n\r\n        // get the count for the book resources\r\n        dbkey = \"ust-\" + bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        rescount = data.total;\r\n        ust = rescount.toLocaleString();\r\n\r\n        // get the count for the book resources\r\n        dbkey = \"utn-\" + bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        rescount = data.total;\r\n        utn = rescount.toLocaleString();\r\n\r\n        // get the count for the book resources\r\n        dbkey = \"utq-\" + bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        rescount = data.total;\r\n        utq = rescount.toLocaleString();\r\n\r\n        // get the count for the book resources\r\n        dbkey = \"utw-\" + bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        rescount = data.grandTotalWordCount; // note diff!\r\n        utw = rescount.toLocaleString();\r\n\r\n        // get the count for the book resources\r\n        dbkey = \"uta-\" + bkid;\r\n        data = await dbsetup.bpstore.getItem(dbkey);\r\n        rescount = data.grandTotalWordCount; // note diff!\r\n        uta = rescount.toLocaleString();\r\n\r\n        row = [bkid,ult,ust,utn,utq,utw,uta];\r\n        csv.addRow(csvdata,row);\r\n    }\r\n\r\n\r\n    // Download the CSV data\r\n    // -- first, convert 2d array to CSV string\r\n    let csvDownload = csv.toCSV(csvdata);\r\n    return csvDownload;\r\n}\r\n","import React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Popover from '@material-ui/core/Popover';\n\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport { green } from '@material-ui/core/colors';\nimport {BookPackageRollup} from 'book-package-rcl';\nimport * as books from '../src/core/books';\nimport * as opt from '../src/core/optimize';\nimport * as csv from '../src/core/exportBookPackage';\nimport * as exp from '../src/core/export';\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\n\nimport * as dbsetup from 'book-package-rcl';\n\nexport function download(filename: string, text: string) {\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      flexGrow: 1,\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    alignItemsAndJustifyContent: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },  \n    offset: {...theme.mixins.toolbar},\n  }),\n);\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nfunction joinBookIds(state: opt.bpStateIF ) {\n  const x = Object.keys(state);\n  let y: string[] = [];\n  for (let i=0; i<x.length; i++) {\n    if ( state[x[i]][0] ) {\n      y.push(books.bookIdByTitle(x[i]));\n    }\n  }\n  return y.join();\n}\n  \n    \nfunction getSteps() {\n  return ['Select Books', 'Book Package Details', 'Configure Book Package Flow', 'Optimized Flow'];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return 'Select books, then click Next to generate book package details';\n    case 1:\n      return 'Click Next to configure book book package flow optimization';\n    case 2:\n      return 'Select any books completed, then click Next to optimize book package flow';\n    case 3:\n      return 'Optimized Book Package Flow';\n    default:\n      return 'Unknown step';\n  }\n}\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nlet queryProcessedOnce = false;\nfunction useQuery() {\n  let search = window.location.search;\n  //console.log(\"url=\",window.location.origin,window.location.pathname)\n  return new URLSearchParams(search);\n}\n\nexport default function App() {\n  const [state, setState] = React.useState({ ...books.titlesToBoolean() }); \n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n  \n  /* ----------------------------------------------------------\n      Stepper\n  */\n  const steps = getSteps();\n\n  const isStepOptional = (step: number) => {\n    return false;\n  };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    let states = Object.keys(state);\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n    }\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  let query = useQuery();\n  if ( activeStep === 0 && queryProcessedOnce === false ) {\n    queryProcessedOnce = true;\n    let bks   = query.get(\"books\");\n    if ( bks !== null ) {\n      // user has launched the app with URL query parameters\n      let barrayIds = bks.split(',');\n      let barrayTitles: string[] = [];\n      for ( let i=0; i < barrayIds.length; i++ ) {\n        let x = books.bookTitleById(barrayIds[i]);\n        if ( x === \"\" ) {\n          alert(\"Invalid Book Id:\"+barrayIds[i]);\n          break;\n        }\n        barrayTitles.push(x);\n      }\n      for( let i=0; i < barrayTitles.length; i++) {\n        let name = barrayTitles[i];\n        console.log(\"name:\",name)\n        // set the state variables\n        state[name][0] = true;\n        state[name][1] = false;\n        let b: boolean[] = [];\n        b[0] = true;\n        b[1] = false;  \n      }\n      // skip to step 2...\n      //activeStep = 1; //works sort of\n      handleNext();\n      // for URL, always clear local cache\n      dbsetup.bpstore.clear();\n    }\n  }\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  /* ----------------------------------------------------------\n      Popover\n  */\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const popen = Boolean(anchorEl);\n  const id = popen ? 'simple-popover' : undefined;\n\n\n  /* ----------------------------------------------------------\n      Menu drawer\n  */\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  async function handleExportDetails() {\n    let data = await csv.exportBookPackage(state);\n    let ts = new Date().toISOString();\n    let fn = 'BookPackageDetails-' + ts + '.csv';\n    download(fn, data);\n  }\n\n  const copyToClipboard = (str: string) => {\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  async function handlePermalink(event: React.MouseEvent<HTMLButtonElement>) {\n    const defBase = \"https://unfoldingword.github.io/book-package-app/\";\n    let states = Object.keys(state);\n    let ids: string[] = [];\n    for( let i=0; i < states.length; i++) {\n      let name = states[i];\n      if ( state[name][0] === true ) {\n        // get the id\n        let id = books.bookIdByTitle(name);\n        ids.push(id);\n      }\n    }\n    // build up the URL\n    const origin   = window.location.origin;\n    const pathname = window.location.pathname;\n    const qstring  = '?books=';\n    let url = origin+pathname+qstring+ids.join(',');\n    if ( origin.startsWith(\"file\") ) {\n      url = defBase+qstring+ids.join(',');\n    }\n    copyToClipboard(url);\n    setAnchorEl(event.currentTarget);\n  }\n//http://localhost:3000/book-package-app/?books=gen,exo\n  async function handleDeleteLocalCache() {\n    dbsetup.bpstore.clear();\n  }\n\n  async function handleExportSummary() {\n    let data = await exp.exportCounts(state);\n    let ts = new Date().toISOString();\n    let fn = 'BookPackageSummary-' + ts + '.csv';\n    download(fn, data);\n  }\n\n  async function handleOptExportSummary() {\n    let data = await dbsetup.bpstore.getItem('optimized-csv-data');\n    let ts = new Date().toISOString();\n    let fn = 'OptimizationFlow-' + ts + '.csv';\n    download(fn, data);\n  }\n\n    const handleSelectNoneOt = () => {\n    let states = books.oldTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = false;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectAllOt = () => {\n    let states = books.oldTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = true;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = true;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectNoneNt = () => {\n    let states = books.newTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = false;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectAllNt = () => {\n    let states = books.newTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = true;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = true;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  /* ----------------------------------------------------------\n      Switch for data refresh\n  */\n const [clearF, setClearF] = React.useState({\n    clearFlag: false,\n  });\n\n  const handleChangeClearFlag = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setClearF({ ...clearF, [name]: event.target.checked });\n  };\n\n\n  \n  /* ----------------------------------------------------------\n      Form/checkbox stuff \n  */\n  // these are for the initial book seletion\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let b: boolean[] = [];\n    b[0] = event.target.checked;\n    b[1] = false;\n    setState({ ...state, [name]: b });\n  };\n\n  const handleFinishedChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let b: boolean[] = [];\n    b[0] = true;\n    b[1] = event.target.checked;\n    setState({ ...state, [name]: b });\n  };\n\n  const [_opt, setOpt] = React.useState(<CircularProgress/>);\n  React.useEffect( () => {\n    const fetchData = async () => {\n      try {\n        await opt.optimize(state, setOpt);\n      } catch (error) {\n        setOpt(\n          <div>\n            {error.message}\n          </div>\n        )\n        return;\n      }\n    };\n    if (activeStep !== 3) {return;}\n    fetchData();\n  }, [state,activeStep]); \n  // the parameter [] allows the effect to skip if value unchanged\n  // an empty [] will only update on mount of component\n  \n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" \n          className={clsx(classes.appBar, {[classes.appBarShift]: open })}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Book Package and Flow Optimization\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch checked={clearF.clearFlag} onChange={handleChangeClearFlag('clearFlag')} value=\"clearFlag\" color=\"primary\" />\n              }\n              label=\"Refresh Book Package Data\"\n            />\n        </FormGroup>\n        <Divider />\n              <Button disabled={activeStep !== 0 } onClick={handleDeleteLocalCache} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Delete Local Cache\n              </Button>\n              <Divider />\n              <Button disabled={activeStep !==1 }   onClick={handleExportDetails} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Export Snapshot\n              </Button>\n              <Divider />\n              <Button disabled={activeStep === 0 } aria-describedby={id}  \n                onClick={handlePermalink} color=\"primary\" variant=\"contained\" className={classes.button}\n              >\n              Copy Link\n              </Button>\n              <Popover\n                id={id}\n                open={popen}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n              >\n                <Typography>Link copied to clipboard!</Typography>\n              </Popover>\n      </Drawer> \n      <Paper>\n        <Typography> <br/> <br/> </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps: { completed?: boolean } = {};\n            const labelProps: { optional?: React.ReactNode } = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <Container>\n          <div className={classes.alignItemsAndJustifyContent}>\n          <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n          </div>\n\n          <div className={classes.alignItemsAndJustifyContent}>\n            <Button disabled={activeStep === 0} onClick={handleBack} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Back\n            </Button>\n\n            {isStepOptional(activeStep) && (\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>\n                Skip\n              </Button>\n            )}\n\n            <Button disabled={activeStep === 3} variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\n              Next\n            </Button>\n\n            {activeStep === 1 && (\n              <Button onClick={handleExportSummary} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Export\n              </Button>\n            )}\n\n            {activeStep === 3 && (\n              <>\n              <Button onClick={handleReset} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Start Over\n              </Button>\n              <Button onClick={handleOptExportSummary} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Export Optimization\n              </Button>\n              </>\n            )}\n          </div>\n\n          <div className={classes.alignItemsAndJustifyContent}>\n            {(activeStep === 0) && (\n              <Grid container spacing={3}>\n                <Grid item xs={5}>\n                  <Paper>\n                    <Typography> <br/> </Typography>\n                    <div>\n                    <Button onClick={handleSelectAllOt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select All\n                    </Button>\n                    <Button onClick={handleSelectNoneOt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select None\n                    </Button>\n                    </div>\n                    <FormControl required component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Old Testament</FormLabel>\n                    <FormGroup>\n                      {books.oldTestament().map(t => \n                        <FormControlLabel\n                          control={<Checkbox checked={state[t][0]} onChange={handleChange(t)} value={t} />}\n                          label={t} key={t}\n                        />\n                      )}                \n                    </FormGroup>\n                    <FormHelperText />\n                    </FormControl>\n                  </Paper>\n                </Grid>\n                <Grid item xs={2}>\n                <Typography> <br/> <br/> <br/> </Typography>\n                  <Paper>\n                  <FormControl required component=\"fieldset\" className={classes.formControl}>\n                    <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Checkbox checked={state['Open Bible Stories'][0]} \n                              onChange={handleChange('Open Bible Stories')} \n                              value='Open Bible Stories' />\n                          }\n                          label='Open Bible Stories' key='Open Bible Stories'\n                        />\n                    </FormGroup>\n                    <FormHelperText />\n                    </FormControl>\n                  </Paper>\n                </Grid>\n                <Grid item xs={5}>\n                  <Paper>\n                    <Typography> <br/> </Typography>\n                    <div>\n                    <Button onClick={handleSelectAllNt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select All\n                    </Button>\n                    <Button onClick={handleSelectNoneNt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select None\n                    </Button>\n                    </div>\n\n                    <FormControl required component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">New Testament</FormLabel>\n                    <FormGroup>\n                      {books.newTestament().map(t => \n                        <FormControlLabel\n                          control={<Checkbox checked={state[t][0]} onChange={handleChange(t)} value={t} />}\n                          label={t} key={t}\n                        />\n                      )}                \n                    </FormGroup>\n                    <FormHelperText />\n                    </FormControl>\n                  </Paper>\n                </Grid>\n              </Grid>\n            )}\n\n\n            {(activeStep === 1) && (\n              <div>\n                <Paper>\n                  <BookPackageRollup bookId={joinBookIds(state)} chapter='' clearFlag={clearF.clearFlag} />\n                </Paper>\n              </div>\n            )}\n\n\n            {(activeStep === 2 ) && (\n              <Paper>\n                <FormControl required component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Select one or more</FormLabel>\n                <FormGroup>\n                  <div>\n                    {Object.keys(state)\n                      .filter(function(book) {\n                        return state[book][0];\n                      }).map(t => (\n                        <FormControlLabel\n                        control={<GreenCheckbox checked={state[t][1]} onChange={handleFinishedChange(t)} value={t} key={t} />}\n                        label={t}\n                      />\n                    ))}\n                  </div>                \n                </FormGroup>\n                <FormHelperText />\n                </FormControl>\n              </Paper>\n            )}\n\n            {(activeStep === 3) && (\n              <Paper>\n                {_opt}\n              </Paper>\n            )}\n          </div>\n        </Container>\n      </Paper>\n    </div>\n  );\n}\n\n/*\nhttp://localhost:3000/book-package-app/?books=mat,mrk,luk,jhn,act,rom,1co,2co,gal,eph,php,col,1th,2th,1ti,2ti,tit,phm,heb,jas,1pe,2pe,1jn,2jn,3jn,jud,rev\n\n\n\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import localforage from 'localforage';\r\n\r\nlocalforage.setDriver([localforage.INDEXEDDB, localforage.WEBSQL]);\r\n\r\nlocalforage.ready().then(function() {\r\n    // This code runs once localforage\r\n    // has fully initialized the selected driver.\r\n    console.log(localforage.driver()); \r\n}).catch(function (e) {\r\n    console.log(e); // `No available storage method found.`\r\n    // One of the cases that `ready()` rejects,\r\n    // is when no usable storage driver is found\r\n});\r\n\r\nexport const bpstore = localforage.createInstance({\r\n    driver: [localforage.INDEXEDDB],\r\n    name: 'bp-store',\r\n});\r\n\r\n\r\n"],"sourceRoot":""}